[["index.html", "Naslund Chapter 1 Analysis Chapter 1 Sampling scheme 1.1 Dissolved oxygen 1.2 Temperature 1.3 PAR 1.4 Dissolved gas concentrations 1.5 Residence time calculation", " Naslund Chapter 1 Analysis Laura Naslund 2023-02-13 Chapter 1 Sampling scheme We sampled 4 sites over at least one 24 hr period. We installed 25 ebullition traps across 5 transects in each impoundment. Every 3 hours, we recorded the volume of gas accumulated in each ebullition trap and took a diffusive flux measurement immediately adjacent to 10 if the ebullition traps across the impoundment. To determine impoundment area, I digitized the impoundments using high resolution (0.5 ft) orthoimagery captured during the leaf off period. Pick has a beaver dam on the inlet stream and I delineated only to the beaver dam. Site Area (km2) Max Depth (m) Mean Depth (m) Residence Time (days) Dates Sampled Deans 0.0041 3.52 2.03 46 8/16/22 - 8/17/228/30/22 - 8/31/22 Sister 3 0.0012 2.27 1.25 20 8/22/22 - 8/23/22 Catfish 0.0018 1.98 0.80 19 9/06/22 - 9/07/229/18/22 - 9/19/22 Pick 0.0077 3.80 1.58 45 8/22/22 - 8/23/22 1.1 Dissolved oxygen We recorded dissolved oxygen every 15 minutes 0.25 m below the surface in every impoundment. From 6/20/22 to 7/13/22, we also recorded dissolved oxygen 0.1m from the bottom of Pick in the deepest location in the impoundment. Because dissolved oxygen was consistently 0 mg/L, we reallocated our oxygen sensors and installed both a top and bottom DO sensor in Sister 3. 1.1.1 Deans 1.1.2 Catfish 1.1.3 Sister 3 1.1.4 Pick 1.1.5 All impoundments top DO 1.2 Temperature 1.2.1 Deans 1.2.2 Catfish 1.2.3 Sister 3 1.2.4 Pick 1.3 PAR All sensors were submerged ~0.25m below the water surface 1.3.1 Deans Sensor casing cracked, so no available PAR data for second Deans sampling 8/16/22 1.3.2 Catfish 9/6/22 1.3.3 Pick #9/13/22 1.3.4 Sister3 #8/22/22 1.4 Dissolved gas concentrations I sampled for dissolved gas 0.25 m from the surface of the impoundments, 0.1m from the bottom, in the inlet stream, and in the outlet stream. The dissolved gas samples from Catfish on 9/18/22-9/19/22 were not handled properly, thus those values are excluded from the summaries. ## `summarise()` has grouped output by &#39;Site&#39;, &#39;Collection.Date&#39;. You can override ## using the `.groups` argument. ## # A tibble: 20 × 6 ## # Groups: Site, Collection.Date [5] ## Site Collection.Date Location CH4_avg_umol CH4_sd reps ## &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 Pick 9/13/2022 top 98.7 3.09 3 ## 2 Deans 8/31/2022 top 0.980 1.32 3 ## 3 Sister3 8/23/2022 top 0.849 0.0111 3 ## 4 Catfish 9/6/2022 top 0.586 0.00180 3 ## 5 Deans 8/16/2022 top 0.583 0.0476 2 ## 6 Pick 9/13/2022 bottom 126. 60.7 3 ## 7 Sister3 8/23/2022 bottom 2.89 0.985 3 ## 8 Deans 8/16/2022 bottom 0.883 0.0543 3 ## 9 Catfish 9/6/2022 bottom 0.557 0.0686 3 ## 10 Deans 8/31/2022 bottom 0.290 0.0597 3 ## 11 Deans 8/31/2022 inlet 16.9 4.77 3 ## 12 Pick 9/13/2022 inlet 9.98 1.34 3 ## 13 Deans 8/16/2022 inlet 9.95 2.86 3 ## 14 Catfish 9/6/2022 inlet 0.598 0.197 3 ## 15 Sister3 8/23/2022 inlet 0.0229 0.0000664 3 ## 16 Deans 8/31/2022 outlet 4.31 0.936 3 ## 17 Sister3 8/23/2022 outlet 2.62 0.0720 3 ## 18 Catfish 9/6/2022 outlet 1.47 0.410 3 ## 19 Pick 9/13/2022 outlet 0.365 0.170 3 ## 20 Deans 8/16/2022 outlet 0.311 0.106 3 ## # A tibble: 20 × 6 ## # Groups: Site, Collection.Date [5] ## Site Collection.Date Location CO2_avg_umol CO2_sd reps ## &lt;chr&gt; &lt;chr&gt; &lt;fct&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;int&gt; ## 1 Pick 9/13/2022 top 560. 8.69 3 ## 2 Catfish 9/6/2022 top 138. 5.69 3 ## 3 Deans 8/16/2022 top 107. 3.11 2 ## 4 Deans 8/31/2022 top 62.3 7.88 3 ## 5 Sister3 8/23/2022 top 40.3 4.55 3 ## 6 Pick 9/13/2022 bottom 635. 161. 3 ## 7 Catfish 9/6/2022 bottom 164. 49.1 3 ## 8 Deans 8/16/2022 bottom 88.9 16.4 3 ## 9 Sister3 8/23/2022 bottom 70.0 15.2 3 ## 10 Deans 8/31/2022 bottom 36.6 6.79 3 ## 11 Deans 8/31/2022 inlet 377. 99.1 3 ## 12 Deans 8/16/2022 inlet 234. 46.0 3 ## 13 Pick 9/13/2022 inlet 168. 9.29 3 ## 14 Catfish 9/6/2022 inlet 141. 6.10 3 ## 15 Sister3 8/23/2022 inlet 75.2 7.54 3 ## 16 Pick 9/13/2022 outlet 160. 25.6 3 ## 17 Deans 8/31/2022 outlet 153. 44.1 3 ## 18 Catfish 9/6/2022 outlet 142. 9.15 3 ## 19 Sister3 8/23/2022 outlet 81.8 8.42 3 ## 20 Deans 8/16/2022 outlet 50.2 5.51 3 1.5 Residence time calculation I took a point estimate of discharge from the ponds while sampling, but these discharge values gave unrealistic residence times. I instead calculated discharge from a regional regression equation using average annual precipitation and watershed area (Gotvald et al. 2017). "],["diffusive-emissions.html", "Chapter 2 Diffusive emissions 2.1 Deans Diffusive 8/16/22-8/17/22 2.2 Deans Diffusive 8/30/22-8/31/22 2.3 Deans Cloud Comparison 2.4 Catfish Diffusive 9/6/22-9/7/22 2.5 Catfish Diffusive 9/18/22-9/19/22 2.6 Catfish Cloud Comparison 2.7 Pick Diffusive 9/13/22- 9/14/22 2.8 Sister3 Diffusive 8/22/22-8/23/22", " Chapter 2 Diffusive emissions 2.1 Deans Diffusive 8/16/22-8/17/22 2.2 Deans Diffusive 8/30/22-8/31/22 2.3 Deans Cloud Comparison ## Warning: package &#39;vembedr&#39; was built under R version 4.2.2 ## ## Attaching package: &#39;vembedr&#39; ## The following object is masked from &#39;package:lubridate&#39;: ## ## hms 2.4 Catfish Diffusive 9/6/22-9/7/22 2.5 Catfish Diffusive 9/18/22-9/19/22 2.6 Catfish Cloud Comparison 2.7 Pick Diffusive 9/13/22- 9/14/22 2.8 Sister3 Diffusive 8/22/22-8/23/22 "],["ebullition.html", "Chapter 3 Ebullition 3.1 Deans Ebullitive 8/16/22-8/17/22 3.2 Deans Ebullitive 8/30/22-8/31/22 3.3 Catfish Ebullitive 9/06/22-9/07/22 3.4 Catfish Ebullitive 9/18/22-9/19/22 3.5 Pick Ebullitive 9/13/22-9/14/22 3.6 Sister Ebullitive 3 8/22/22-8/23/22", " Chapter 3 Ebullition 7.8% of gas volume observations indicated a decline in gas volume from one time period to the next. Most of these observations occurred at night and in the pond covered with Wolffia. I set all negative observations of volume greater than -0.5mL change equal to 0. All other negative gas volume observations (&lt;1%) were treated as missing data. Because there was insufficient gas volume to measure CH4 concentration at every time-point, I used the average CH4 concentration measured from ebullition in a sampling event to calculate ebullition for the following figures. 3.1 Deans Ebullitive 8/16/22-8/17/22 3.2 Deans Ebullitive 8/30/22-8/31/22 3.3 Catfish Ebullitive 9/06/22-9/07/22 3.4 Catfish Ebullitive 9/18/22-9/19/22 3.5 Pick Ebullitive 9/13/22-9/14/22 3.6 Sister Ebullitive 3 8/22/22-8/23/22 tm_shape(sister3)+ tm_polygons(col = &quot;white&quot;)+ tm_shape(sister3_pts_22_eb, bbox = st_bbox(catfish) %&gt;% st_as_sfc())+ tm_dots(&quot;ch4_eb_g_m2_hr&quot;, size = 0.5, shape = 21, palette = &quot;-RdYlBu&quot;, midpoint = NA, title = &quot;CH4 flux (g/m2/hr)&quot;)+ tm_layout(scale = 1.5, legend.outside = T)+ tm_facets(by = &quot;trip_wr&quot;, free.coords = F, inside.original.bbox = T) ## Warning: Removed 99 rows containing non-finite values (stat_bin). "],["simple-kriging-just-in-space.html", "Chapter 4 Simple kriging just in space", " Chapter 4 Simple kriging just in space test_data &lt;- pick_pts_13 %&gt;% filter(trip == 2) # create x y trend model and pull residuals to krige test_data$x &lt;- st_coordinates(test_data) %&gt;% as.data.frame() %&gt;% pull(X) test_data$y &lt;- st_coordinates(test_data) %&gt;% as.data.frame() %&gt;% pull(Y) func_trend &lt;- as.formula(flux_co2_g_hr ~ x + y) lm_trend &lt;- lm(func_trend, data = test_data) summary(lm_trend) ## ## Call: ## lm(formula = func_trend, data = test_data) ## ## Residuals: ## Min 1Q Median 3Q Max ## -0.52583 -0.10096 -0.02899 0.21436 0.41754 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 4.815e+04 3.024e+04 1.593 0.1457 ## x -1.999e-02 7.032e-03 -2.842 0.0193 * ## y -1.130e-02 7.539e-03 -1.499 0.1680 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 0.3229 on 9 degrees of freedom ## Multiple R-squared: 0.7654, Adjusted R-squared: 0.7132 ## F-statistic: 14.68 on 2 and 9 DF, p-value: 0.001468 test_data$resid_co2_g_hr &lt;- residuals(lm_trend) hist(test_data$resid_co2_g_hr) # function to return table with normal scores and original values to use for backtransform later nscore &lt;- function(x) { nscore &lt;- qqnorm(x, plot.it = FALSE)$x # normal score trn.table &lt;- data.frame(x=sort(x),nscore=sort(nscore)) return (trn.table) } # quantile-quantile normal score transform data test_data$resid_norm_co2_g_hr &lt;- qqnorm(test_data$resid_co2_g_hr, plot.it = F)$x nscore.tab &lt;- nscore(test_data$resid_co2_g_hr) plot(x~nscore, data=nscore.tab) plot(ecdf(test_data$resid_co2_g_hr)) plot(ecdf(test_data$resid_norm_co2_g_hr)) hist(test_data$resid_co2_g_hr) hist(test_data$resid_norm_co2_g_hr) mapview(test_data, zcol = &quot;resid_norm_co2_g_hr&quot;) # create isotropic variogram # width = lag distance (approximately minimum non zero data spacing) # cutoff = number of lags * lag distance (number of lags = 1/2 major axis/lag distance) # think about how cutoff and width parameters are impacting variogram calculation var.norm.iso &lt;- variogram(resid_norm_co2_g_hr~1, test_data ,cutoff = 70 ,width = 14) var.norm.th.iso &lt;- vgm(psill = 1, &quot;Exp&quot;, range = 17) # no nugget # plot theoretical with experimental variogram vm.norm.sim &lt;- variogramLine(var.norm.th.iso,maxdist=100,min=0.0001,n=100, covariance=FALSE) plot(var.norm.iso$dist,var.norm.iso$gamma, xlim = c(0,100)) lines(vm.norm.sim$dist,vm.norm.sim$gamma,col=&quot;blue&quot;) # create anisotropic variogram (doesn&#39;t appear to be enough data to do this/not well supported with residuals of gaussian transformed model) var.norm.045 = variogram(resid_norm_co2_g_hr~1,test_data,cutoff = 70,width =14,alpha = 45.0,tol.hor=22.5) # 045 directional var.norm.135 = variogram(resid_norm_co2_g_hr~1,test_data,cutoff = 70,width =14,alpha = 135.0,tol.hor=22.5) # 135 directional var.norm.th.ani&lt;- vgm(psill = 1, &quot;Exp&quot;, 17, anis = c(135, 0.5)) # plot theoretical anisotropic variograms with experimental variograms unit_vector = c(sin(45*pi/180),sin(45*pi/180),0) # unit vector for 035 azimuth vm.norm.sim.an.45 &lt;- variogramLine(var.norm.th.ani, maxdist=100,min=0.0001,n=100, covariance=FALSE, dir=unit_vector) unit_vector = c(sin(45*pi/180),-sin(45*pi/180),0) # unit vector for 035 azimuth vm.norm.sim.an.135 &lt;- variogramLine(var.norm.th.ani, maxdist=100,min=0.0001,n=100, covariance=FALSE, dir=unit_vector) plot(var.norm.135$dist, var.norm.135$gamma, col = &quot;green&quot;, pch=16) points(var.norm.045$dist, var.norm.045$gamma, col = &quot;red&quot;, pch=16) lines(vm.norm.sim.an.45$dist, vm.norm.sim.an.45$gamma, col =&quot;red&quot;) lines(vm.norm.sim.an.135$dist, vm.norm.sim.an.135$gamma, col =&quot;green&quot;) # create interpolation grid grid &lt;- st_as_stars(st_bbox(pick), dx = 1, dy = 1) grid &lt;- grid[pick] # ordinary kriging (assumption of stationarity of the mean is relaxed, mean is estimated locally) co2.kriged = krige(resid_norm_co2_g_hr~1, test_data, grid, model = var.norm.th.iso,maxdist = Inf,nmin = 0,omax=Inf) ## Warning in predict.gstat(g, newdata = newdata, block = block, nsim = nsim, : NAs ## introduced by coercion to integer range ## [using ordinary kriging] # simple kriging (mean is stationary) co2.kriged.sk = krige(resid_norm_co2_g_hr~1, test_data, grid, model = var.norm.th.iso,maxdist = Inf,nmin = 0,omax=Inf, beta = mean(test_data$resid_norm_co2_g_hr)) ## Warning in predict.gstat(g, newdata = newdata, block = block, nsim = nsim, : NAs ## introduced by coercion to integer range ## [using simple kriging] # ordinary and simple kriging (yield very similar results in this example) range(co2.kriged$var1.pred, na.rm = T) ## [1] -1.676307 1.670763 range(co2.kriged.sk$var1.pred, na.rm = T) ## [1] -1.675864 1.670890 plot(co2.kriged.sk) # backtransform normal scores # based on the gslib documentation, it looks like what you need to do is for each point interpolate between points in the normal score table and use an extrapolation function (possibly linear?) for points beyond the range above.max.lm &lt;- lm(x~nscore, data=nscore.tab[(nrow(nscore.tab)-1):nrow(nscore.tab),]) above.max.func &lt;- function(x){ coefficients(above.max.lm)[[1]] + (coefficients(above.max.lm)[[2]]*x) } below.min.lm &lt;- lm(x~nscore, data=nscore.tab[1:2,]) below.min.func &lt;- function(x){ coefficients(below.min.lm)[[1]] + (coefficients(below.min.lm)[[2]]*x) } interpolate &lt;- approxfun(x=nscore.tab$nscore, y=nscore.tab$x) backtr &lt;- function(x){ if(is.na(x)){ return(NA) } if(x&gt;max(nscore.tab$nscore)){ return(above.max.func(x)) } if(x&lt;min(nscore.tab$nscore)){ return(below.min.func(x)) } else{ return(interpolate(x)) } } co2.kriged.sk$backtransformed &lt;- apply(co2.kriged.sk$var1.pred, 1:2, backtr) # add back in the trend to the kriged backtransformed residuals co2.kriged.sk$trend &lt;- predict(co2.kriged.sk[3], lm_trend) co2.kriged.sk$detrended &lt;- co2.kriged.sk$trend + co2.kriged.sk$backtransformed # Sequential Gaussian simulation with isotropic variogram using simple kriging (but ordinary kriging also run) # Ortiz 2020 https://qspace.library.queensu.ca/bitstream/handle/1974/28538/2020-01-Ortiz-Simulation.pdf?sequence=2 indicates that you shouldn&#39;t use ordinary kriging in sequential gaussian simulation. The krige function I think allows you to use ordinary kriging and it looks like it might be trying to estimate beta within the function. co2.kriged.sim = krige(resid_norm_co2_g_hr~1, test_data, grid, model = var.norm.th.iso,maxdist = Inf,nmin = 0,omax=Inf, indicators=FALSE, nsim=4, nmax=100) # will take a second to run ## Warning in predict.gstat(g, newdata = newdata, block = block, nsim = nsim, : NAs ## introduced by coercion to integer range ## drawing 4 GLS realisations of beta... ## [using conditional Gaussian simulation] co2.kriged.sim.sk = krige(resid_norm_co2_g_hr~1, test_data, grid, model = var.norm.th.iso,maxdist = Inf,nmin = 0,omax=Inf, indicators=FALSE, nsim=4, nmax=100, beta = 0) # will take a second to run # mean should be zero after gaussian transformation # I don&#39;t know if beta is required here ## Warning in predict.gstat(g, newdata = newdata, block = block, nsim = nsim, : NAs ## introduced by coercion to integer range ## [using conditional Gaussian simulation] co2.kriged.sim.sk$backtransform &lt;- st_apply(co2.kriged.sim.sk[1], 1:3, backtr) str(co2.kriged.sim.sk) ## List of 2 ## $ var1 : num [1:220, 1:182, 1:4] NA NA NA NA NA NA NA NA NA NA ... ## ..- attr(*, &quot;names&quot;)= chr [1:160160] &quot;sim11&quot; &quot;sim12&quot; &quot;sim13&quot; &quot;sim14&quot; ... ## $ backtransform: num [1:220, 1:182, 1:4] NA NA NA NA NA NA NA NA NA NA ... ## - attr(*, &quot;dimensions&quot;)=List of 3 ## ..$ x :List of 7 ## .. ..$ from : num 1 ## .. ..$ to : int 220 ## .. ..$ offset: num 287504 ## .. ..$ delta : num 1 ## .. ..$ refsys:List of 2 ## .. .. ..$ input: chr &quot;EPSG:32617&quot; ## .. .. ..$ wkt : chr &quot;PROJCRS[\\&quot;WGS 84 / UTM zone 17N\\&quot;,\\n BASEGEOGCRS[\\&quot;WGS 84\\&quot;,\\n DATUM[\\&quot;World Geodetic System 1984\\&quot;,\\&quot;| __truncated__ ## .. .. ..- attr(*, &quot;class&quot;)= chr &quot;crs&quot; ## .. ..$ point : logi NA ## .. ..$ values: NULL ## .. ..- attr(*, &quot;class&quot;)= chr &quot;dimension&quot; ## ..$ y :List of 7 ## .. ..$ from : num 1 ## .. ..$ to : int 182 ## .. ..$ offset: num 3752091 ## .. ..$ delta : num -1 ## .. ..$ refsys:List of 2 ## .. .. ..$ input: chr &quot;EPSG:32617&quot; ## .. .. ..$ wkt : chr &quot;PROJCRS[\\&quot;WGS 84 / UTM zone 17N\\&quot;,\\n BASEGEOGCRS[\\&quot;WGS 84\\&quot;,\\n DATUM[\\&quot;World Geodetic System 1984\\&quot;,\\&quot;| __truncated__ ## .. .. ..- attr(*, &quot;class&quot;)= chr &quot;crs&quot; ## .. ..$ point : logi NA ## .. ..$ values: NULL ## .. ..- attr(*, &quot;class&quot;)= chr &quot;dimension&quot; ## ..$ sample:List of 7 ## .. ..$ from : num 1 ## .. ..$ to : int 4 ## .. ..$ offset: num NA ## .. ..$ delta : num NA ## .. ..$ refsys: chr NA ## .. ..$ point : logi NA ## .. ..$ values: chr [1:4] &quot;sim1&quot; &quot;sim2&quot; &quot;sim3&quot; &quot;sim4&quot; ## .. ..- attr(*, &quot;class&quot;)= chr &quot;dimension&quot; ## ..- attr(*, &quot;raster&quot;)=List of 4 ## .. ..$ affine : num [1:2] 0 0 ## .. ..$ dimensions : chr [1:2] &quot;x&quot; &quot;y&quot; ## .. ..$ curvilinear: logi FALSE ## .. ..$ blocksizes : NULL ## .. ..- attr(*, &quot;class&quot;)= chr &quot;stars_raster&quot; ## ..- attr(*, &quot;class&quot;)= chr &quot;dimensions&quot; ## - attr(*, &quot;class&quot;)= chr &quot;stars&quot; plot(co2.kriged.sim.sk[1]) plot(co2.kriged.sim.sk[2]) co2.kriged.sim.sk$trend &lt;- predict(co2.kriged.sim.sk[2], lm_trend) co2.kriged.sim.sk$detrended &lt;- co2.kriged.sim.sk[2] + co2.kriged.sim.sk[3] plot(co2.kriged.sim.sk[4]) mapview(co2.kriged.sim.sk[4,,,1]) mapview(co2.kriged.sim.sk[4,,,2]) mapview(co2.kriged.sim.sk[4,,,3]) mapview(co2.kriged.sim.sk[4,,,4]) # total CO2 flux estimate (in grams) from simulations sum(co2.kriged.sim.sk[4,,,1]$detrended, na.rm = T) ## [1] -32.92627 sum(co2.kriged.sim.sk[4,,,2]$detrended, na.rm = T) ## [1] 783.7374 sum(co2.kriged.sim.sk[4,,,3]$detrended, na.rm = T) ## [1] -176.1069 sum(co2.kriged.sim.sk[4,,,4]$detrended, na.rm = T) ## [1] -824.5998 # total CO2 flux estimate using only the mean of measured data values st_area(pick) %&gt;% as.numeric()*mean(test_data$flux_co2_g_hr) ## [1] 702.4269 mapshot( mapview(co2.kriged.sim.sk[4,,,1], layer.name = &quot;CO2 Flux (g m-2 hr-1)&quot;), file = &quot;example-gaussian-sim.png&quot;, remove_controls = c(&quot;zoomControl&quot;, &quot;homeButton&quot;, &quot;drawToolbar&quot;, &quot;easyButton&quot;) ) mapshot( mapview(pick, col.regions = NA, legend = F, homebutton = F) + mapview(test_data, zcol = &quot;flux_co2_g_hr&quot;, col.regions = viridis::viridis_pal(option = &quot;B&quot;), layer.name = &quot; CO2 Flux (g/m2/hr)&quot;), file = &quot;example-gaussian-sim-pts.png&quot;, remove_controls = c(&quot;zoomControl&quot;, &quot;homeButton&quot;, &quot;drawToolbar&quot;, &quot;easyButton&quot;) ) "],["ebullition-analysis.html", "Chapter 5 Ebullition Analysis 5.1 Plots 5.2 Mod1: Non-zero data, fixed effects only 5.3 Mod2: Non zero data, mixed model 5.4 Mod2.a: Non zero data, mixed model without Picks 5.5 Mod2.b: Non zero data, mixed model only Picks 5.6 Mod3: Logistic regression, fixed effects only 5.7 Mod4: Logistic regression, mixed model 5.8 Mod4.a: Logistic regression, mixed model without Picks 5.9 Mod4.b: Logistic regression, mixed model only Picks 5.10 Mod5: Hurdle model, predictors generate structural zeros 5.11 Model selection with Mod5 predictors 5.12 Mod6: Hurdle model, equal probability of structural zeros 5.13 Mod7: Not broken up by time, no longer zero-inflated, sampling random effect", " Chapter 5 Ebullition Analysis I want to evaluate the relationship between ebullitive flux of CH4 and depth and distance to the inlet. I hypothesized that both depth and distance to the inlet will be negatively associated with ebullitive flux. Ultimately, we have to deal with the fact that the data are zero-inflated and bounded by 0. I tried multiple models below to address these characteristics eb_all &lt;- bind_rows(sister3_pts_22_eb %&gt;% mutate(Site =&quot;Sister3&quot;), pick_pts_13_eb, catfish_pts_18_eb %&gt;% dplyr::select(-c(catfish_dist_1, catfish_dist_2)), catfish_pts_06_eb %&gt;% dplyr::select(-c(catfish_dist_1, catfish_dist_2)), deans_pts_30_eb %&gt;% dplyr::select(-c(deans_dist_1, deans_dist_2)), deans_pts_16_eb%&gt;% dplyr::select(-c(deans_dist_1, deans_dist_2))) %&gt;% mutate(Site = as.factor(Site))%&gt;% mutate(Depth_scale = scale(Depth), inlet_dist_scale = scale(inlet_dist)) class(eb_all$Collection.Date) ## [1] &quot;Date&quot; ebullition_24 &lt;- eb_all %&gt;% mutate(ch4_eb_g = gas_vol_corrected * (1/10^6) * ch4_conc * (1/10^3) * 16.04 * (1/0.0821)* (1/293.15), Collection.Start.Date = case_when( Sampling == &quot;Deans1&quot; ~ ymd(&quot;2022-08-16&quot;), Sampling == &quot;Deans2&quot; ~ ymd(&quot;2022-08-30&quot;), Sampling == &quot;Catfish1&quot; ~ ymd(&quot;2022-09-06&quot;), Sampling == &quot;Catfish2&quot; ~ ymd(&quot;2022-09-18&quot;), Sampling == &quot;Pick1&quot; ~ ymd(&quot;2022-09-13&quot;), Sampling == &quot;Sister31&quot; ~ ymd(&quot;2022-08-22&quot;) )) %&gt;% group_by(Site, Trap, Sampling, Collection.Start.Date, inlet_dist, Depth, inlet_dist_scale, Depth_scale) %&gt;% summarize(sum_time = sum(time_hr, na.rm = T), sum_g = sum(ch4_eb_g, na.rm = T)) %&gt;% mutate(area = pi * 81 * 0.0001, ch4_eb_g_m2_hr_24 = sum_g * (1/area)* (1/sum_time)) ## `summarise()` has grouped output by &#39;Site&#39;, &#39;Trap&#39;, &#39;Sampling&#39;, ## &#39;Collection.Start.Date&#39;, &#39;inlet_dist&#39;, &#39;Depth&#39;, &#39;inlet_dist_scale&#39;. You can ## override using the `.groups` argument. 5.1 Plots ## Warning in cor.test.default(eb_all$Depth, eb_all$inlet_dist, method = ## &quot;spearman&quot;): Cannot compute exact p-value with ties ## ## Spearman&#39;s rank correlation rho ## ## data: eb_all$Depth and eb_all$inlet_dist ## S = 232420659, p-value &lt; 2.2e-16 ## alternative hypothesis: true rho is not equal to 0 ## sample estimates: ## rho ## 0.3853327 ## Warning: Removed 102 rows containing missing values (geom_point). ## Warning: Removed 99 rows containing missing values (geom_point). 5.2 Mod1: Non-zero data, fixed effects only ## ## Call: ## glm(formula = ch4_eb_g_m2_hr ~ Depth_scale + inlet_dist_scale, ## family = Gamma(link = &quot;log&quot;), data = eb_all %&gt;% filter(ch4_eb_g_m2_hr &gt; ## 0)) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -3.0371 -1.3024 -0.7659 0.1164 6.1579 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) -5.04284 0.07453 -67.658 &lt; 2e-16 *** ## Depth_scale -0.39865 0.07925 -5.030 6.46e-07 *** ## inlet_dist_scale 0.42694 0.07079 6.031 2.84e-09 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for Gamma family taken to be 3.338868) ## ## Null deviance: 1051.4 on 606 degrees of freedom ## Residual deviance: 946.0 on 604 degrees of freedom ## (3 observations deleted due to missingness) ## AIC: -4870.2 ## ## Number of Fisher Scoring iterations: 20 5.3 Mod2: Non zero data, mixed model ## Generalized linear mixed model fit by maximum likelihood (Laplace ## Approximation) [glmerMod] ## Family: Gamma ( log ) ## Formula: ch4_eb_g_m2_hr ~ Depth_scale + inlet_dist_scale + (1 | Sampling) + ## (1 | trip_wr) ## Data: eb_all %&gt;% filter(ch4_eb_g_m2_hr &gt; 0) ## ## AIC BIC logLik deviance df.resid ## -4977.1 -4950.6 2494.5 -4989.1 601 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -0.6576 -0.4957 -0.3276 0.0486 8.5309 ## ## Random effects: ## Groups Name Variance Std.Dev. ## trip_wr (Intercept) 0.1412 0.3757 ## Sampling (Intercept) 1.0126 1.0063 ## Residual 2.2635 1.5045 ## Number of obs: 607, groups: trip_wr, 9; Sampling, 6 ## ## Fixed effects: ## Estimate Std. Error t value Pr(&gt;|z|) ## (Intercept) -5.25559 0.28871 -18.20 &lt;2e-16 *** ## Depth_scale -0.12866 0.05593 -2.30 0.0214 * ## inlet_dist_scale -0.04922 0.07812 -0.63 0.5286 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) Dpth_s ## Depth_scale 0.007 ## inlt_dst_sc 0.009 -0.604 ## [1] 0.9605394 ## [1] 63.9355 5.4 Mod2.a: Non zero data, mixed model without Picks ## Generalized linear mixed model fit by maximum likelihood (Laplace ## Approximation) [glmerMod] ## Family: Gamma ( log ) ## Formula: ch4_eb_g_m2_hr ~ Depth_scale + inlet_dist_scale + (1 | Sampling) + ## (1 | trip_wr) ## Data: eb_all %&gt;% filter(ch4_eb_g_m2_hr &gt; 0, Site != &quot;Picks&quot;) ## ## AIC BIC logLik deviance df.resid ## -4335.0 -4309.9 2173.5 -4347.0 483 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -0.8500 -0.5872 -0.3402 0.2238 7.8848 ## ## Random effects: ## Groups Name Variance Std.Dev. ## trip_wr (Intercept) 0.1621 0.4027 ## Sampling (Intercept) 0.1294 0.3597 ## Residual 1.3683 1.1697 ## Number of obs: 489, groups: trip_wr, 9; Sampling, 5 ## ## Fixed effects: ## Estimate Std. Error t value Pr(&gt;|z|) ## (Intercept) -5.88892 0.18879 -31.192 &lt; 2e-16 *** ## Depth_scale -0.33452 0.05902 -5.668 1.45e-08 *** ## inlet_dist_scale -0.69166 0.10408 -6.646 3.02e-11 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) Dpth_s ## Depth_scale -0.063 ## inlt_dst_sc 0.216 -0.429 ## [1] 0.8934819 ## [1] 28.12695 5.5 Mod2.b: Non zero data, mixed model only Picks ## Generalized linear mixed model fit by maximum likelihood (Laplace ## Approximation) [glmerMod] ## Family: Gamma ( log ) ## Formula: ch4_eb_g_m2_hr ~ Depth_scale + inlet_dist_scale + (1 | trip_wr) ## Data: eb_all %&gt;% filter(ch4_eb_g_m2_hr &gt; 0, Site == &quot;Picks&quot;) ## ## AIC BIC logLik deviance df.resid ## -758.6 -744.8 384.3 -768.6 113 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -0.8575 -0.6547 -0.3588 0.2529 4.1793 ## ## Random effects: ## Groups Name Variance Std.Dev. ## trip_wr (Intercept) 0.08694 0.2949 ## Residual 1.25959 1.1223 ## Number of obs: 118, groups: trip_wr, 9 ## ## Fixed effects: ## Estimate Std. Error t value Pr(&gt;|z|) ## (Intercept) -4.28414 0.20539 -20.858 &lt;2e-16 *** ## Depth_scale 0.22936 0.08917 2.572 0.0101 * ## inlet_dist_scale -0.04199 0.09275 -0.453 0.6507 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) Dpth_s ## Depth_scale 0.468 ## inlt_dst_sc -0.773 -0.676 5.6 Mod3: Logistic regression, fixed effects only ## ## Call: ## glm(formula = ch4_eb_bin ~ Depth_scale + inlet_dist_scale, family = binomial(link = &quot;logit&quot;), ## data = eb_all %&gt;% mutate(ch4_eb_bin = if_else(ch4_eb_g_m2_hr &gt; ## 0, 1, 0))) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.5224 -1.1802 -0.9237 1.1543 1.4610 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -0.0005558 0.0578164 -0.010 0.99233 ## Depth_scale -0.2726690 0.0615884 -4.427 9.54e-06 *** ## inlet_dist_scale 0.1683809 0.0633510 2.658 0.00786 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 1691.2 on 1219 degrees of freedom ## Residual deviance: 1669.7 on 1217 degrees of freedom ## (102 observations deleted due to missingness) ## AIC: 1675.7 ## ## Number of Fisher Scoring iterations: 4 5.7 Mod4: Logistic regression, mixed model ## Generalized linear mixed model fit by maximum likelihood (Laplace ## Approximation) [glmerMod] ## Family: binomial ( logit ) ## Formula: ch4_eb_bin ~ Depth_scale + inlet_dist_scale + (1 | Sampling) + ## (1 | trip_wr) ## Data: eb_all %&gt;% mutate(ch4_eb_bin = if_else(ch4_eb_g_m2_hr &gt; 0, 1, 0)) ## ## AIC BIC logLik deviance df.resid ## 1638.7 1664.2 -814.3 1628.7 1215 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -2.5389 -0.8958 -0.5247 0.9325 1.8398 ## ## Random effects: ## Groups Name Variance Std.Dev. ## trip_wr (Intercept) 0.1305 0.3612 ## Sampling (Intercept) 0.2655 0.5152 ## Number of obs: 1220, groups: trip_wr, 9; Sampling, 6 ## ## Fixed effects: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.04498 0.24986 0.180 0.85714 ## Depth_scale -0.23113 0.07635 -3.027 0.00247 ** ## inlet_dist_scale -0.15614 0.10993 -1.420 0.15551 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) Dpth_s ## Depth_scale -0.005 ## inlt_dst_sc -0.017 -0.385 5.8 Mod4.a: Logistic regression, mixed model without Picks ## Generalized linear mixed model fit by maximum likelihood (Laplace ## Approximation) [glmerMod] ## Family: binomial ( logit ) ## Formula: ch4_eb_bin ~ Depth_scale + inlet_dist_scale + (1 | Sampling) + ## (1 | trip_wr) ## Data: ## eb_all %&gt;% filter(Site != &quot;Picks&quot;) %&gt;% mutate(ch4_eb_bin = if_else(ch4_eb_g_m2_hr &gt; ## 0, 1, 0)) ## ## AIC BIC logLik deviance df.resid ## 1369.3 1394.1 -679.7 1359.3 1040 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -2.2651 -0.8673 -0.5219 0.9084 2.5019 ## ## Random effects: ## Groups Name Variance Std.Dev. ## trip_wr (Intercept) 0.1984 0.4454 ## Sampling (Intercept) 0.1151 0.3392 ## Number of obs: 1045, groups: trip_wr, 9; Sampling, 5 ## ## Fixed effects: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -0.36037 0.22819 -1.579 0.11427 ## Depth_scale -0.28580 0.08987 -3.180 0.00147 ** ## inlet_dist_scale -0.78095 0.15319 -5.098 3.43e-07 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) Dpth_s ## Depth_scale -0.058 ## inlt_dst_sc 0.224 -0.271 5.9 Mod4.b: Logistic regression, mixed model only Picks ## ## Call: ## glm(formula = ch4_eb_bin ~ Depth_scale + inlet_dist_scale, family = binomial(link = &quot;logit&quot;), ## data = eb_all %&gt;% filter(Site == &quot;Picks&quot;) %&gt;% mutate(ch4_eb_bin = if_else(ch4_eb_g_m2_hr &gt; ## 0, 1, 0))) ## ## Deviance Residuals: ## Min 1Q Median 3Q Max ## -1.6482 -1.4017 0.8133 0.9002 0.9866 ## ## Coefficients: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.5248 0.3100 1.693 0.0904 . ## Depth_scale 0.0757 0.1700 0.445 0.6561 ## inlet_dist_scale 0.1119 0.1596 0.701 0.4833 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## (Dispersion parameter for binomial family taken to be 1) ## ## Null deviance: 220.89 on 174 degrees of freedom ## Residual deviance: 219.34 on 172 degrees of freedom ## (49 observations deleted due to missingness) ## AIC: 225.34 ## ## Number of Fisher Scoring iterations: 4 5.10 Mod5: Hurdle model, predictors generate structural zeros ## Family: Gamma ( inverse ) ## Formula: ## ch4_eb_g_m2_hr ~ Depth_scale + inlet_dist_scale + (1 | Sampling) + ## (1 | trip_wr) ## Zero inflation: ~. ## Data: eb_all %&gt;% filter(is.na(ch4_eb_g_m2_hr) == F) %&gt;% st_drop_geometry() ## ## AIC BIC logLik deviance df.resid ## -3334.1 -3277.9 1678.0 -3356.1 1209 ## ## Random effects: ## ## Conditional model: ## Groups Name Variance Std.Dev. ## Sampling (Intercept) 13181.4 114.81 ## trip_wr (Intercept) 627.9 25.06 ## Number of obs: 1220, groups: Sampling, 6; trip_wr, 9 ## ## Zero-inflation model: ## Groups Name Variance Std.Dev. ## Sampling (Intercept) 0.2655 0.5152 ## trip_wr (Intercept) 0.1305 0.3612 ## Number of obs: 1220, groups: Sampling, 6; trip_wr, 9 ## ## Dispersion estimate for Gamma family (sigma^2): 1.12 ## ## Conditional model: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 217.6529 49.0191 4.440 8.99e-06 *** ## Depth_scale -2.1773 5.4050 -0.403 0.687 ## inlet_dist_scale 0.1156 5.7618 0.020 0.984 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Zero-inflation model: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -0.04497 0.24987 -0.180 0.85717 ## Depth_scale 0.23114 0.07638 3.026 0.00248 ** ## inlet_dist_scale 0.15614 0.11002 1.419 0.15585 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 5.11 Model selection with Mod5 predictors ## Warning in (function (start, objective, gradient = NULL, hessian = NULL, : NA/ ## NaN function evaluation ## Warning in (function (start, objective, gradient = NULL, hessian = NULL, : NA/ ## NaN function evaluation ## ## Model selection based on AICc: ## ## K AICc Delta_AICc AICcWt Cum.Wt LL ## mod5.b 9 -3346.95 0.00 0.99 0.99 1682.55 ## mod5.a 9 -3335.91 11.04 0.00 1.00 1677.03 ## mod5 11 -3333.88 13.07 0.00 1.00 1678.05 ## Family: Gamma ( inverse ) ## Formula: ## ch4_eb_g_m2_hr ~ inlet_dist_scale + (1 | Sampling) + (1 | trip_wr) ## Zero inflation: ~. ## Data: eb_all %&gt;% filter(is.na(ch4_eb_g_m2_hr) == F) %&gt;% st_drop_geometry() ## ## AIC BIC logLik deviance df.resid ## -3347.1 -3301.1 1682.5 -3365.1 1214 ## ## Random effects: ## ## Conditional model: ## Groups Name Variance Std.Dev. ## Sampling (Intercept) 12887.6 113.52 ## trip_wr (Intercept) 652.7 25.55 ## Number of obs: 1223, groups: Sampling, 6; trip_wr, 9 ## ## Zero-inflation model: ## Groups Name Variance Std.Dev. ## Sampling (Intercept) 0.3736 0.6113 ## trip_wr (Intercept) 0.1267 0.3560 ## Number of obs: 1223, groups: Sampling, 6; trip_wr, 9 ## ## Dispersion estimate for Gamma family (sigma^2): 1.12 ## ## Conditional model: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 217.704 48.544 4.485 7.3e-06 *** ## inlet_dist_scale -1.215 4.579 -0.265 0.791 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Zero-inflation model: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) -0.04541 0.28286 -0.160 0.87247 ## inlet_dist_scale 0.30065 0.10016 3.002 0.00268 ** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 5.12 Mod6: Hurdle model, equal probability of structural zeros ## Family: Gamma ( inverse ) ## Formula: ## ch4_eb_g_m2_hr ~ Depth_scale + inlet_dist_scale + (1 | Sampling) + ## (1 | trip_wr) ## Zero inflation: ~1 ## Data: eb_all %&gt;% filter(is.na(ch4_eb_g_m2_hr) == F) %&gt;% st_drop_geometry() ## ## AIC BIC logLik deviance df.resid ## -3279.5 -3243.8 1646.8 -3293.5 1213 ## ## Random effects: ## ## Conditional model: ## Groups Name Variance Std.Dev. ## Sampling (Intercept) 13181.5 114.81 ## trip_wr (Intercept) 627.9 25.06 ## Number of obs: 1220, groups: Sampling, 6; trip_wr, 9 ## ## Dispersion estimate for Gamma family (sigma^2): 1.12 ## ## Conditional model: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 217.6502 49.0191 4.440 8.99e-06 *** ## Depth_scale -2.1774 5.4050 -0.403 0.687 ## inlet_dist_scale 0.1153 5.7619 0.020 0.984 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Zero-inflation model: ## Estimate Std. Error z value Pr(&gt;|z|) ## (Intercept) 0.009838 0.057261 0.172 0.864 5.13 Mod7: Not broken up by time, no longer zero-inflated, sampling random effect ## Generalized linear mixed model fit by maximum likelihood (Laplace ## Approximation) [glmerMod] ## Family: Gamma ( log ) ## Formula: ch4_eb_g_m2_hr_24 ~ Depth + inlet_dist + (1 | Sampling) ## Data: ebullition_24 %&gt;% filter(ch4_eb_g_m2_hr_24 &gt; 0) ## ## AIC BIC logLik deviance df.resid ## -1389.3 -1374.5 699.6 -1399.3 137 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -0.6772 -0.4786 -0.2915 0.0717 8.7228 ## ## Random effects: ## Groups Name Variance Std.Dev. ## Sampling (Intercept) 1.165 1.079 ## Residual 2.077 1.441 ## Number of obs: 142, groups: Sampling, 6 ## ## Fixed effects: ## Estimate Std. Error t value Pr(&gt;|z|) ## (Intercept) -5.6377237 0.3526593 -15.99 &lt;2e-16 *** ## Depth -0.2574277 0.1226123 -2.10 0.0358 * ## inlet_dist -0.0005186 0.0030542 -0.17 0.8652 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) Depth ## Depth -0.131 ## inlet_dist -0.241 -0.637 ## [1] 0.00000000 0.06173597 ## Generalized linear mixed model fit by maximum likelihood (Laplace ## Approximation) [glmerMod] ## Family: Gamma ( log ) ## Formula: ch4_eb_g_m2_hr_24 ~ Depth + (1 | Sampling) ## Data: ebullition_24 %&gt;% filter(ch4_eb_g_m2_hr_24 &gt; 0) ## ## AIC BIC logLik deviance df.resid ## -1391.3 -1379.4 699.6 -1399.3 138 ## ## Scaled residuals: ## Min 1Q Median 3Q Max ## -0.6796 -0.4816 -0.2738 0.0737 8.6811 ## ## Random effects: ## Groups Name Variance Std.Dev. ## Sampling (Intercept) 1.089 1.043 ## Residual 2.063 1.436 ## Number of obs: 142, groups: Sampling, 6 ## ## Fixed effects: ## Estimate Std. Error t value Pr(&gt;|z|) ## (Intercept) -5.65192 0.04313 -131.050 &lt; 2e-16 *** ## Depth -0.27074 0.03687 -7.344 2.07e-13 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Correlation of Fixed Effects: ## (Intr) ## Depth -0.023 ## ## Model selection based on AICc: ## ## K AICc Delta_AICc AICcWt Cum.Wt LL ## mod7.a 4 -1394.94 0.00 0.84 0.84 701.62 ## mod7.b 4 -1390.97 3.97 0.12 0.96 699.63 ## mod7 5 -1388.85 6.09 0.04 1.00 699.65 ## Warning: package &#39;ggeffects&#39; was built under R version 4.2.2 ## Warning: Removed 1 rows containing missing values (geom_point). "],["diffusion-estimates.html", "Chapter 6 Diffusion estimates", " Chapter 6 Diffusion estimates Deans 8/16/22 CO2 Estimate # sim_num &lt;- 500 # n_num &lt;- 500 # # periods &lt;- unique(deans_pts_16$trip) # var.lst &lt;- list() # # for(i in 1:length(periods)){ # var.lst$data[[i]] &lt;- deans_pts_16 %&gt;% filter(trip == periods[i]) # # # quantile-quantile normal score transform data # var.lst$data[[i]]$norm_co2_g_hr &lt;- qqnorm(var.lst$data[[i]]$flux_co2_g_hr, plot.it = F)$x # # var.lst$nscore.tab[[i]] &lt;- nscore(var.lst$data[[i]]$flux_co2_g_hr) # # var.lst$var_df[[i]] &lt;- variogram(norm_co2_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_co2_g_hr) == F), cloud = T) # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # } # # # make a pdf of all of the experimental variograms # pdf(&quot;5-Results/1-kriged-estimates/variograms_deans_20220816_co2.pdf&quot;, paper=&quot;a4&quot;, width=9, height=12) # marrangeGrob(grobs=compact(var.lst$var_plot), nrow=4, ncol = 2) # dev.off() # # # # define theoretical variogram # dean_16_var_co2 &lt;- vgm(psill = 1, &quot;Sph&quot;, range = 18) # # # make interpolation grid # dean_grid &lt;- st_as_stars(st_bbox(deans), dx = 1, dy = 1) # dean_grid &lt;- dean_grid[deans] # # deans_16_co2_results &lt;- NULL # deans_16_co2_results_summarized &lt;- NULL # # for(i in 1:length(periods)){ # # #change nsim and nmax for runs # var.lst$kriged[[i]] &lt;- krige(norm_co2_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_co2_g_hr) == F), dean_grid, model = dean_16_var_co2, nsim=sim_num, maxdist = Inf,nmin = 0,omax=Inf, beta = 0, nmax = n_num, debug.level = -1) # # # above.max.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][(nrow(var.lst$nscore.tab[[i]])-1):nrow(var.lst$nscore.tab[[i]]),]) # above.max.func &lt;- function(x){ # coefficients(above.max.lm)[[1]] + (coefficients(above.max.lm)[[2]]*x) # } # below.min.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][1:2,]) # below.min.func &lt;- function(x){ # coefficients(below.min.lm)[[1]] + (coefficients(below.min.lm)[[2]]*x) # } # # interpolate &lt;- approxfun(x=var.lst$nscore.tab[[i]]$nscore, y=var.lst$nscore.tab[[i]]$x) # backtr &lt;- function(x){ # if(is.na(x)){ # return(NA) # } # if(x&gt;max(var.lst$nscore.tab[[i]]$nscore)){ # return(above.max.func(x)) # } # if(x&lt;min(var.lst$nscore.tab[[i]]$nscore)){ # return(below.min.func(x)) # } # else{ # return(interpolate(x)) # } # # } # # var.lst$kriged[[i]]$backtransformed &lt;- st_apply(var.lst$kriged[[i]][1], 1:3, backtr) # # sim_vec &lt;- c() # for(f in 1:sim_num){ # sim_vec &lt;- c(sum(var.lst$kriged[[i]][2,,,f]$backtransformed, na.rm = T), sim_vec) # } # # temp_df &lt;- data.frame(site = &quot;Deans&quot;, date = &quot;2022-08-16&quot;, period = i, gas = &quot;CO2&quot;, sum_flux = sim_vec) # temp_df_sum &lt;- data.frame(site = &quot;Deans&quot;, date = &quot;2022-08-16&quot;, period = i, gas = &quot;CO2&quot;, flux_2.5 = as.numeric(quantile(sim_vec, 0.025)), flux_97.5 = as.numeric(quantile(sim_vec, 0.975)), mean_flux = mean(sim_vec)) # deans_16_co2_results &lt;- bind_rows(deans_16_co2_results, temp_df) # deans_16_co2_results_summarized &lt;- bind_rows(deans_16_co2_results_summarized, temp_df_sum) # # } # # write.csv(deans_16_co2_results_summarized, &quot;5-Results/1-kriged-estimates/deans_16_co2_results_summarized.csv&quot;, row.names = F) Deans 8/16/22 CH4 Estimate # sim_num &lt;- 500 # n_num &lt;- 500 # # periods &lt;- unique(deans_pts_16$trip) # var.lst &lt;- list() # # for(i in 1:length(periods)){ # var.lst$data[[i]] &lt;- deans_pts_16 %&gt;% filter(trip == periods[i]) # # # quantile-quantile normal score transform data # var.lst$data[[i]]$norm_ch4_g_hr &lt;- qqnorm(var.lst$data[[i]]$flux_ch4_g_hr, plot.it = F)$x # # var.lst$nscore.tab[[i]] &lt;- nscore(var.lst$data[[i]]$flux_ch4_g_hr) # # var.lst$var_df[[i]] &lt;- variogram(norm_ch4_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_ch4_g_hr) == F), cloud = T) # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # } # # # make a pdf of all of the experimental variograms # pdf(&quot;5-Results/1-kriged-estimates/variograms_deans_20220816_ch4.pdf&quot;, paper=&quot;a4&quot;, width=9, height=12) # marrangeGrob(grobs=compact(var.lst$var_plot), nrow=4, ncol = 2) # dev.off() # # # # define theoretical variogram # deans_16_var_ch4 &lt;- vgm(psill = 1, &quot;Sph&quot;, range = 20) # # # make interpolation grid # dean_grid &lt;- st_as_stars(st_bbox(deans), dx = 1, dy = 1) # dean_grid &lt;- dean_grid[deans] # # deans_16_ch4_results &lt;- NULL # deans_16_ch4_results_summarized &lt;- NULL # # for(i in 1:length(periods)){ # # #change nsim and nmax for runs # var.lst$kriged[[i]] &lt;- krige(norm_ch4_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_ch4_g_hr) == F), dean_grid, model = deans_16_var_ch4, nsim=sim_num, maxdist = Inf,nmin = 0,omax=Inf, beta = 0, nmax = n_num, debug.level = -1) # # # above.max.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][(nrow(var.lst$nscore.tab[[i]])-1):nrow(var.lst$nscore.tab[[i]]),]) # above.max.func &lt;- function(x){ # coefficients(above.max.lm)[[1]] + (coefficients(above.max.lm)[[2]]*x) # } # below.min.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][1:2,]) # below.min.func &lt;- function(x){ # coefficients(below.min.lm)[[1]] + (coefficients(below.min.lm)[[2]]*x) # } # # interpolate &lt;- approxfun(x=var.lst$nscore.tab[[i]]$nscore, y=var.lst$nscore.tab[[i]]$x) # backtr &lt;- function(x){ # if(is.na(x)){ # return(NA) # } # if(x&gt;max(var.lst$nscore.tab[[i]]$nscore)){ # return(above.max.func(x)) # } # if(x&lt;min(var.lst$nscore.tab[[i]]$nscore)){ # return(below.min.func(x)) # } # else{ # return(interpolate(x)) # } # # } # # var.lst$kriged[[i]]$backtransformed &lt;- st_apply(var.lst$kriged[[i]][1], 1:3, backtr) # # sim_vec &lt;- c() # for(f in 1:sim_num){ # sim_vec &lt;- c(sum(var.lst$kriged[[i]][2,,,f]$backtransformed, na.rm = T), sim_vec) # } # # temp_df &lt;- data.frame(site = &quot;Deans&quot;, date = &quot;2022-08-16&quot;, period = i, gas = &quot;CH4&quot;, sum_flux = sim_vec) # temp_df_sum &lt;- data.frame(site = &quot;Deans&quot;, date = &quot;2022-08-16&quot;, period = i, gas = &quot;CH4&quot;, flux_2.5 = as.numeric(quantile(sim_vec, 0.025)), flux_97.5 = as.numeric(quantile(sim_vec, 0.975)), mean_flux = mean(sim_vec)) # deans_16_ch4_results &lt;- bind_rows(deans_16_ch4_results, temp_df) # deans_16_ch4_results_summarized &lt;- bind_rows(deans_16_ch4_results_summarized, temp_df_sum) # # } # # write.csv(deans_16_ch4_results_summarized, &quot;5-Results/1-kriged-estimates/deans_16_ch4_results_summarized.csv&quot;, row.names = F) Deans 8/30/22 CO2 Estimate # sim_num &lt;- 500 # n_num &lt;- 500 # # periods &lt;- unique(deans_pts_30$trip) # var.lst &lt;- list() # # for(i in 1:length(periods)){ # var.lst$data[[i]] &lt;- deans_pts_30 %&gt;% filter(trip == periods[i]) # # # quantile-quantile normal score transform data # var.lst$data[[i]]$norm_co2_g_hr &lt;- qqnorm(var.lst$data[[i]]$flux_co2_g_hr, plot.it = F)$x # # var.lst$nscore.tab[[i]] &lt;- nscore(var.lst$data[[i]]$flux_co2_g_hr) # # var.lst$var_df[[i]] &lt;- variogram(norm_co2_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_co2_g_hr) == F), cloud = T) # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # } # # # make a pdf of all of the experimental variograms # pdf(&quot;5-Results/1-kriged-estimates/variograms_deans_20220830_co2.pdf&quot;, paper=&quot;a4&quot;, width=9, height=12) # marrangeGrob(grobs=compact(var.lst$var_plot), nrow=4, ncol = 2) # dev.off() # # # # define theoretical variogram # dean_30_var_co2 &lt;- vgm(psill = 1, &quot;Sph&quot;, range = 18) # # # make interpolation grid # dean_grid &lt;- st_as_stars(st_bbox(deans), dx = 1, dy = 1) # dean_grid &lt;- dean_grid[deans] # # deans_30_co2_results &lt;- NULL # deans_30_co2_results_summarized &lt;- NULL # # for(i in 1:length(periods)){ # # #change nsim and nmax for runs # var.lst$kriged[[i]] &lt;- krige(norm_co2_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_co2_g_hr) == F), dean_grid, model = dean_30_var_co2, nsim=sim_num, maxdist = Inf,nmin = 0,omax=Inf, beta = 0, nmax = n_num, debug.level = -1) # # # above.max.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][(nrow(var.lst$nscore.tab[[i]])-1):nrow(var.lst$nscore.tab[[i]]),]) # above.max.func &lt;- function(x){ # coefficients(above.max.lm)[[1]] + (coefficients(above.max.lm)[[2]]*x) # } # below.min.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][1:2,]) # below.min.func &lt;- function(x){ # coefficients(below.min.lm)[[1]] + (coefficients(below.min.lm)[[2]]*x) # } # # interpolate &lt;- approxfun(x=var.lst$nscore.tab[[i]]$nscore, y=var.lst$nscore.tab[[i]]$x) # backtr &lt;- function(x){ # if(is.na(x)){ # return(NA) # } # if(x&gt;max(var.lst$nscore.tab[[i]]$nscore)){ # return(above.max.func(x)) # } # if(x&lt;min(var.lst$nscore.tab[[i]]$nscore)){ # return(below.min.func(x)) # } # else{ # return(interpolate(x)) # } # # } # # var.lst$kriged[[i]]$backtransformed &lt;- st_apply(var.lst$kriged[[i]][1], 1:3, backtr) # # sim_vec &lt;- c() # for(f in 1:sim_num){ # sim_vec &lt;- c(sum(var.lst$kriged[[i]][2,,,f]$backtransformed, na.rm = T), sim_vec) # } # # temp_df &lt;- data.frame(site = &quot;Deans&quot;, date = &quot;2022-08-30&quot;, period = i, gas = &quot;CO2&quot;, sum_flux = sim_vec) # temp_df_sum &lt;- data.frame(site = &quot;Deans&quot;, date = &quot;2022-08-30&quot;, period = i, gas = &quot;CO2&quot;, flux_2.5 = as.numeric(quantile(sim_vec, 0.025)), flux_97.5 = as.numeric(quantile(sim_vec, 0.975)), mean_flux = mean(sim_vec)) # deans_30_co2_results &lt;- bind_rows(deans_30_co2_results, temp_df) # deans_30_co2_results_summarized &lt;- bind_rows(deans_30_co2_results_summarized, temp_df_sum) # # } # # write.csv(deans_30_co2_results_summarized, &quot;5-Results/1-kriged-estimates/deans_30_co2_results_summarized.csv&quot;, row.names = F) Deans 8/30/22 CH4 Estimate # sim_num &lt;- 500 # n_num &lt;- 500 # # periods &lt;- unique(deans_pts_30$trip) # var.lst &lt;- list() # # for(i in 1:length(periods)){ # var.lst$data[[i]] &lt;- deans_pts_30 %&gt;% filter(trip == periods[i]) # # # quantile-quantile normal score transform data # var.lst$data[[i]]$norm_ch4_g_hr &lt;- qqnorm(var.lst$data[[i]]$flux_ch4_g_hr, plot.it = F)$x # # var.lst$nscore.tab[[i]] &lt;- nscore(var.lst$data[[i]]$flux_ch4_g_hr) # # var.lst$var_df[[i]] &lt;- variogram(norm_ch4_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_ch4_g_hr) == F), cloud = T) # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # } # # # make a pdf of all of the experimental variograms # pdf(&quot;5-Results/1-kriged-estimates/variograms_deans_20220830_ch4.pdf&quot;, paper=&quot;a4&quot;, width=9, height=12) # marrangeGrob(grobs=compact(var.lst$var_plot), nrow=4, ncol = 2) # dev.off() # # # # define theoretical variogram # dean_30_var_ch4 &lt;- vgm(psill = 1, &quot;Sph&quot;, range = 20) # # # make interpolation grid # dean_grid &lt;- st_as_stars(st_bbox(deans), dx = 1, dy = 1) # dean_grid &lt;- dean_grid[deans] # # deans_30_ch4_results &lt;- NULL # deans_30_ch4_results_summarized &lt;- NULL # # for(i in 1:length(periods)){ # # #change nsim and nmax for runs # var.lst$kriged[[i]] &lt;- krige(norm_ch4_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_ch4_g_hr) == F), dean_grid, model = dean_30_var_ch4, nsim=sim_num, maxdist = Inf,nmin = 0,omax=Inf, beta = 0, nmax = n_num, debug.level = -1) # # # above.max.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][(nrow(var.lst$nscore.tab[[i]])-1):nrow(var.lst$nscore.tab[[i]]),]) # above.max.func &lt;- function(x){ # coefficients(above.max.lm)[[1]] + (coefficients(above.max.lm)[[2]]*x) # } # below.min.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][1:2,]) # below.min.func &lt;- function(x){ # coefficients(below.min.lm)[[1]] + (coefficients(below.min.lm)[[2]]*x) # } # # interpolate &lt;- approxfun(x=var.lst$nscore.tab[[i]]$nscore, y=var.lst$nscore.tab[[i]]$x) # backtr &lt;- function(x){ # if(is.na(x)){ # return(NA) # } # if(x&gt;max(var.lst$nscore.tab[[i]]$nscore)){ # return(above.max.func(x)) # } # if(x&lt;min(var.lst$nscore.tab[[i]]$nscore)){ # return(below.min.func(x)) # } # else{ # return(interpolate(x)) # } # # } # # var.lst$kriged[[i]]$backtransformed &lt;- st_apply(var.lst$kriged[[i]][1], 1:3, backtr) # # sim_vec &lt;- c() # for(f in 1:sim_num){ # sim_vec &lt;- c(sum(var.lst$kriged[[i]][2,,,f]$backtransformed, na.rm = T), sim_vec) # } # # temp_df &lt;- data.frame(site = &quot;Deans&quot;, date = &quot;2022-08-30&quot;, period = i, sum_flux = sim_vec) # temp_df_sum &lt;- data.frame(site = &quot;Deans&quot;, date = &quot;2022-08-30&quot;, period = i, flux_2.5 = as.numeric(quantile(sim_vec, 0.025)), flux_97.5 = as.numeric(quantile(sim_vec, 0.975)), mean_flux = mean(sim_vec)) # deans_30_ch4_results &lt;- bind_rows(deans_30_ch4_results, temp_df) # deans_30_ch4_results_summarized &lt;- bind_rows(deans_30_ch4_results_summarized, temp_df_sum) # # } # # write.csv(deans_30_ch4_results_summarized, &quot;5-Results/1-kriged-estimates/deans_30_ch4_results_summarized.csv&quot;, row.names = F) Catfish 9/6/22 CO2 Estimate # sim_num &lt;- 500 # n_num &lt;- 500 # # periods &lt;- unique(catfish_pts_06$trip) # var.lst &lt;- list() # # for(i in 1:length(periods)){ # var.lst$data[[i]] &lt;- catfish_pts_06 %&gt;% filter(trip == periods[i]) # # # quantile-quantile normal score transform data # var.lst$data[[i]]$norm_co2_g_hr &lt;- qqnorm(var.lst$data[[i]]$flux_co2_g_hr, plot.it = F)$x # # var.lst$nscore.tab[[i]] &lt;- nscore(var.lst$data[[i]]$flux_co2_g_hr) # # var.lst$var_df[[i]] &lt;- variogram(norm_co2_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_co2_g_hr) == F), cloud = T) # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # } # # # make a pdf of all of the experimental variograms # pdf(&quot;5-Results/1-kriged-estimates/variograms_catfish_20220906_co2.pdf&quot;, paper=&quot;a4&quot;, width=9, height=12) # marrangeGrob(grobs=compact(var.lst$var_plot), nrow=4, ncol = 2) # dev.off() # # # # define theoretical variogram # catfish_06_var_co2 &lt;- vgm(psill = 1, &quot;Sph&quot;, range = 12) # # # make interpolation grid # catfish_grid &lt;- st_as_stars(st_bbox(catfish), dx = 1, dy = 1) # catfish_grid &lt;- catfish_grid[catfish] # # catfish_06_co2_results &lt;- NULL # catfish_06_co2_results_summarized &lt;- NULL # # for(i in 1:length(periods)){ # # #change nsim and nmax for runs # var.lst$kriged[[i]] &lt;- krige(norm_co2_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_co2_g_hr) == F), catfish_grid, model = catfish_06_var_co2, nsim=sim_num, maxdist = Inf,nmin = 0,omax=Inf, beta = 0, nmax = n_num, debug.level = -1) # # # above.max.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][(nrow(var.lst$nscore.tab[[i]])-1):nrow(var.lst$nscore.tab[[i]]),]) # above.max.func &lt;- function(x){ # coefficients(above.max.lm)[[1]] + (coefficients(above.max.lm)[[2]]*x) # } # below.min.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][1:2,]) # below.min.func &lt;- function(x){ # coefficients(below.min.lm)[[1]] + (coefficients(below.min.lm)[[2]]*x) # } # # interpolate &lt;- approxfun(x=var.lst$nscore.tab[[i]]$nscore, y=var.lst$nscore.tab[[i]]$x) # backtr &lt;- function(x){ # if(is.na(x)){ # return(NA) # } # if(x&gt;max(var.lst$nscore.tab[[i]]$nscore)){ # return(above.max.func(x)) # } # if(x&lt;min(var.lst$nscore.tab[[i]]$nscore)){ # return(below.min.func(x)) # } # else{ # return(interpolate(x)) # } # # } # # var.lst$kriged[[i]]$backtransformed &lt;- st_apply(var.lst$kriged[[i]][1], 1:3, backtr) # # sim_vec &lt;- c() # for(f in 1:sim_num){ # sim_vec &lt;- c(sum(var.lst$kriged[[i]][2,,,f]$backtransformed, na.rm = T), sim_vec) # } # # temp_df &lt;- data.frame(site = &quot;Catfish&quot;, date = &quot;2022-09-06&quot;, period = i, gas = &quot;CO2&quot;, sum_flux = sim_vec) # temp_df_sum &lt;- data.frame(site = &quot;Catfish&quot;, date = &quot;2022-09-06&quot;, period = i, gas = &quot;CO2&quot;, flux_2.5 = as.numeric(quantile(sim_vec, 0.025)), flux_97.5 = as.numeric(quantile(sim_vec, 0.975)), mean_flux = mean(sim_vec)) # catfish_06_co2_results &lt;- bind_rows(catfish_06_co2_results, temp_df) # catfish_06_co2_results_summarized &lt;- bind_rows(catfish_06_co2_results_summarized, temp_df_sum) # # } # # write.csv(catfish_06_co2_results_summarized, &quot;5-Results/1-kriged-estimates/catfish_06_co2_results_summarized.csv&quot;, row.names = F) Catfish 9/6/22 CH4 Estimate # sim_num &lt;- 500 # n_num &lt;- 500 # # periods &lt;- unique(catfish_pts_06$trip) # var.lst &lt;- list() # # for(i in 1:length(periods)){ # var.lst$data[[i]] &lt;- catfish_pts_06 %&gt;% filter(trip == periods[i]) # # # quantile-quantile normal score transform data # var.lst$data[[i]]$norm_ch4_g_hr &lt;- qqnorm(var.lst$data[[i]]$flux_ch4_g_hr, plot.it = F)$x # # var.lst$nscore.tab[[i]] &lt;- nscore(var.lst$data[[i]]$flux_ch4_g_hr) # # var.lst$var_df[[i]] &lt;- variogram(norm_ch4_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_ch4_g_hr) == F), cloud = T) # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # } # # # make a pdf of all of the experimental variograms # pdf(&quot;5-Results/1-kriged-estimates/variograms_catfish_20220906_ch4.pdf&quot;, paper=&quot;a4&quot;, width=9, height=12) # marrangeGrob(grobs=compact(var.lst$var_plot), nrow=4, ncol = 2) # dev.off() # # # # define theoretical variogram # catfish_06_var_ch4 &lt;- vgm(psill = 1, &quot;Sph&quot;, range = 12) # # # make interpolation grid # catfish_grid &lt;- st_as_stars(st_bbox(catfish), dx = 1, dy = 1) # catfish_grid &lt;- catfish_grid[catfish] # # catfish_06_ch4_results &lt;- NULL # catfish_06_ch4_results_summarized &lt;- NULL # # for(i in 1:length(periods)){ # # #change nsim and nmax for runs # var.lst$kriged[[i]] &lt;- krige(norm_ch4_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_ch4_g_hr) == F), catfish_grid, model = catfish_06_var_ch4, nsim=sim_num, maxdist = Inf,nmin = 0,omax=Inf, beta = 0, nmax = n_num, debug.level = -1) # # # above.max.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][(nrow(var.lst$nscore.tab[[i]])-1):nrow(var.lst$nscore.tab[[i]]),]) # above.max.func &lt;- function(x){ # coefficients(above.max.lm)[[1]] + (coefficients(above.max.lm)[[2]]*x) # } # below.min.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][1:2,]) # below.min.func &lt;- function(x){ # coefficients(below.min.lm)[[1]] + (coefficients(below.min.lm)[[2]]*x) # } # # interpolate &lt;- approxfun(x=var.lst$nscore.tab[[i]]$nscore, y=var.lst$nscore.tab[[i]]$x) # backtr &lt;- function(x){ # if(is.na(x)){ # return(NA) # } # if(x&gt;max(var.lst$nscore.tab[[i]]$nscore)){ # return(above.max.func(x)) # } # if(x&lt;min(var.lst$nscore.tab[[i]]$nscore)){ # return(below.min.func(x)) # } # else{ # return(interpolate(x)) # } # # } # # var.lst$kriged[[i]]$backtransformed &lt;- st_apply(var.lst$kriged[[i]][1], 1:3, backtr) # # sim_vec &lt;- c() # for(f in 1:sim_num){ # sim_vec &lt;- c(sum(var.lst$kriged[[i]][2,,,f]$backtransformed, na.rm = T), sim_vec) # } # # temp_df &lt;- data.frame(site = &quot;Catfish&quot;, date = &quot;2022-09-06&quot;, period = i, gas = &quot;CH4&quot;, sum_flux = sim_vec) # temp_df_sum &lt;- data.frame(site = &quot;Catfish&quot;, date = &quot;2022-09-06&quot;, period = i, gas = &quot;CH4&quot;, flux_2.5 = as.numeric(quantile(sim_vec, 0.025)), flux_97.5 = as.numeric(quantile(sim_vec, 0.975)), mean_flux = mean(sim_vec)) # catfish_06_ch4_results &lt;- bind_rows(catfish_06_ch4_results, temp_df) # catfish_06_ch4_results_summarized &lt;- bind_rows(catfish_06_ch4_results_summarized, temp_df_sum) # # } # # write.csv(catfish_06_ch4_results_summarized, &quot;5-Results/1-kriged-estimates/catfish_06_ch4_results_summarized.csv&quot;, row.names = F) Catfish 9/18/22 CO2 Estimate # sim_num &lt;- 500 # n_num &lt;- 500 # # periods &lt;- unique(catfish_pts_18$trip) # var.lst &lt;- list() # # for(i in 1:length(periods)){ # var.lst$data[[i]] &lt;- catfish_pts_18 %&gt;% filter(trip == periods[i]) # # # quantile-quantile normal score transform data # var.lst$data[[i]]$norm_co2_g_hr &lt;- qqnorm(var.lst$data[[i]]$flux_co2_g_hr, plot.it = F)$x # # var.lst$nscore.tab[[i]] &lt;- nscore(var.lst$data[[i]]$flux_co2_g_hr) # # var.lst$var_df[[i]] &lt;- variogram(norm_co2_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_co2_g_hr) == F), cloud = T) # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # } # # # make a pdf of all of the experimental variograms # pdf(&quot;5-Results/1-kriged-estimates/variograms_catfish_20220918_co2.pdf&quot;, paper=&quot;a4&quot;, width=9, height=12) # marrangeGrob(grobs=compact(var.lst$var_plot), nrow=4, ncol = 2) # dev.off() # # # # define theoretical variogram # catfish_18_var_co2 &lt;- vgm(psill = 1, &quot;Sph&quot;, range = 14) # # # make interpolation grid # catfish_grid &lt;- st_as_stars(st_bbox(catfish), dx = 1, dy = 1) # catfish_grid &lt;- catfish_grid[catfish] # # catfish_18_co2_results &lt;- NULL # catfish_18_co2_results_summarized &lt;- NULL # # for(i in 1:length(periods)){ # # #change nsim and nmax for runs # var.lst$kriged[[i]] &lt;- krige(norm_co2_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_co2_g_hr) == F), catfish_grid, model = catfish_18_var_co2, nsim=sim_num, maxdist = Inf,nmin = 0,omax=Inf, beta = 0, nmax = n_num, debug.level = -1) # # # above.max.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][(nrow(var.lst$nscore.tab[[i]])-1):nrow(var.lst$nscore.tab[[i]]),]) # above.max.func &lt;- function(x){ # coefficients(above.max.lm)[[1]] + (coefficients(above.max.lm)[[2]]*x) # } # below.min.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][1:2,]) # below.min.func &lt;- function(x){ # coefficients(below.min.lm)[[1]] + (coefficients(below.min.lm)[[2]]*x) # } # # interpolate &lt;- approxfun(x=var.lst$nscore.tab[[i]]$nscore, y=var.lst$nscore.tab[[i]]$x) # backtr &lt;- function(x){ # if(is.na(x)){ # return(NA) # } # if(x&gt;max(var.lst$nscore.tab[[i]]$nscore)){ # return(above.max.func(x)) # } # if(x&lt;min(var.lst$nscore.tab[[i]]$nscore)){ # return(below.min.func(x)) # } # else{ # return(interpolate(x)) # } # # } # # var.lst$kriged[[i]]$backtransformed &lt;- st_apply(var.lst$kriged[[i]][1], 1:3, backtr) # # sim_vec &lt;- c() # for(f in 1:sim_num){ # sim_vec &lt;- c(sum(var.lst$kriged[[i]][2,,,f]$backtransformed, na.rm = T), sim_vec) # } # # temp_df &lt;- data.frame(site = &quot;Catfish&quot;, date = &quot;2022-09-18&quot;, period = i, gas = &quot;CO2&quot;, sum_flux = sim_vec) # temp_df_sum &lt;- data.frame(site = &quot;Catfish&quot;, date = &quot;2022-09-18&quot;, period = i, gas = &quot;CO2&quot;, flux_2.5 = as.numeric(quantile(sim_vec, 0.025)), flux_97.5 = as.numeric(quantile(sim_vec, 0.975)), mean_flux = mean(sim_vec)) # catfish_18_co2_results &lt;- bind_rows(catfish_18_co2_results, temp_df) # catfish_18_co2_results_summarized &lt;- bind_rows(catfish_18_co2_results_summarized, temp_df_sum) # # } # # write.csv(catfish_18_co2_results_summarized, &quot;5-Results/1-kriged-estimates/catfish_18_co2_results_summarized.csv&quot;, row.names = F) Catfish 9/18/22 CH4 Estimate # sim_num &lt;- 500 # n_num &lt;- 500 # # periods &lt;- unique(catfish_pts_18$trip) # var.lst &lt;- list() # # for(i in 1:length(periods)){ # var.lst$data[[i]] &lt;- catfish_pts_18 %&gt;% filter(trip == periods[i]) # # # quantile-quantile normal score transform data # var.lst$data[[i]]$norm_ch4_g_hr &lt;- qqnorm(var.lst$data[[i]]$flux_ch4_g_hr, plot.it = F)$x # # var.lst$nscore.tab[[i]] &lt;- nscore(var.lst$data[[i]]$flux_ch4_g_hr) # # var.lst$var_df[[i]] &lt;- variogram(norm_ch4_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_ch4_g_hr) == F), cloud = T) # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # } # # # make a pdf of all of the experimental variograms # pdf(&quot;5-Results/1-kriged-estimates/variograms_catfish_202209018_ch4.pdf&quot;, paper=&quot;a4&quot;, width=9, height=12) # marrangeGrob(grobs=compact(var.lst$var_plot), nrow=4, ncol = 2) # dev.off() # # # # define theoretical variogram # catfish_18_var_ch4 &lt;- vgm(psill = 1, &quot;Sph&quot;, range = 10) # # # make interpolation grid # catfish_grid &lt;- st_as_stars(st_bbox(catfish), dx = 1, dy = 1) # catfish_grid &lt;- catfish_grid[catfish] # # catfish_18_ch4_results &lt;- NULL # catfish_18_ch4_results_summarized &lt;- NULL # # for(i in 1:length(periods)){ # # #change nsim and nmax for runs # var.lst$kriged[[i]] &lt;- krige(norm_ch4_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_ch4_g_hr) == F), catfish_grid, model = catfish_18_var_ch4, nsim=sim_num, maxdist = Inf,nmin = 0,omax=Inf, beta = 0, nmax = n_num, debug.level = -1) # # # above.max.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][(nrow(var.lst$nscore.tab[[i]])-1):nrow(var.lst$nscore.tab[[i]]),]) # above.max.func &lt;- function(x){ # coefficients(above.max.lm)[[1]] + (coefficients(above.max.lm)[[2]]*x) # } # below.min.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][1:2,]) # below.min.func &lt;- function(x){ # coefficients(below.min.lm)[[1]] + (coefficients(below.min.lm)[[2]]*x) # } # # interpolate &lt;- approxfun(x=var.lst$nscore.tab[[i]]$nscore, y=var.lst$nscore.tab[[i]]$x) # backtr &lt;- function(x){ # if(is.na(x)){ # return(NA) # } # if(x&gt;max(var.lst$nscore.tab[[i]]$nscore)){ # return(above.max.func(x)) # } # if(x&lt;min(var.lst$nscore.tab[[i]]$nscore)){ # return(below.min.func(x)) # } # else{ # return(interpolate(x)) # } # # } # # var.lst$kriged[[i]]$backtransformed &lt;- st_apply(var.lst$kriged[[i]][1], 1:3, backtr) # # sim_vec &lt;- c() # for(f in 1:sim_num){ # sim_vec &lt;- c(sum(var.lst$kriged[[i]][2,,,f]$backtransformed, na.rm = T), sim_vec) # } # # temp_df &lt;- data.frame(site = &quot;Catfish&quot;, date = &quot;2022-09-18&quot;, period = i, gas = &quot;CH4&quot;, sum_flux = sim_vec) # temp_df_sum &lt;- data.frame(site = &quot;Catfish&quot;, date = &quot;2022-09-18&quot;, period = i, gas = &quot;CH4&quot;, flux_2.5 = as.numeric(quantile(sim_vec, 0.025)), flux_97.5 = as.numeric(quantile(sim_vec, 0.975)), mean_flux = mean(sim_vec)) # catfish_18_ch4_results &lt;- bind_rows(catfish_18_ch4_results, temp_df) # catfish_18_ch4_results_summarized &lt;- bind_rows(catfish_18_ch4_results_summarized, temp_df_sum) # # } # # write.csv(catfish_18_ch4_results_summarized, &quot;5-Results/1-kriged-estimates/catfish_18_ch4_results_summarized.csv&quot;, row.names = F) Sister3 8/22/22 CO2 Estimate # sim_num &lt;- 500 # n_num &lt;- 500 # # periods &lt;- unique(sister3_pts_22$trip) # var.lst &lt;- list() # # for(i in 1:length(periods)){ # var.lst$data[[i]] &lt;- sister3_pts_22 %&gt;% filter(trip == periods[i]) # # # quantile-quantile normal score transform data # var.lst$data[[i]]$norm_co2_g_hr &lt;- qqnorm(var.lst$data[[i]]$flux_co2_g_hr, plot.it = F)$x # # var.lst$nscore.tab[[i]] &lt;- nscore(var.lst$data[[i]]$flux_co2_g_hr) # # var.lst$var_df[[i]] &lt;- variogram(norm_co2_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_co2_g_hr) == F), cloud = T) # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # } # # # make a pdf of all of the experimental variograms # pdf(&quot;5-Results/1-kriged-estimates/variograms_sister3_20220822_co2.pdf&quot;, paper=&quot;a4&quot;, width=9, height=12) # marrangeGrob(grobs=compact(var.lst$var_plot), nrow=4, ncol = 2) # dev.off() # # # # define theoretical variogram # sister3_22_var_co2 &lt;- vgm(psill = 1, &quot;Sph&quot;, range = 7) # # # make interpolation grid # sister3_grid &lt;- st_as_stars(st_bbox(sister3), dx = 1, dy = 1) # sister3_grid &lt;- sister3_grid[sister3] # # sister3_22_co2_results &lt;- NULL # sister3_22_co2_results_summarized &lt;- NULL # # for(i in 1:length(periods)){ # # #change nsim and nmax for runs # var.lst$kriged[[i]] &lt;- krige(norm_co2_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_co2_g_hr) == F), sister3_grid, model = sister3_22_var_co2, nsim=sim_num, maxdist = Inf,nmin = 0,omax=Inf, beta = 0, nmax = n_num, debug.level = -1) # # # above.max.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][(nrow(var.lst$nscore.tab[[i]])-1):nrow(var.lst$nscore.tab[[i]]),]) # above.max.func &lt;- function(x){ # coefficients(above.max.lm)[[1]] + (coefficients(above.max.lm)[[2]]*x) # } # below.min.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][1:2,]) # below.min.func &lt;- function(x){ # coefficients(below.min.lm)[[1]] + (coefficients(below.min.lm)[[2]]*x) # } # # interpolate &lt;- approxfun(x=var.lst$nscore.tab[[i]]$nscore, y=var.lst$nscore.tab[[i]]$x) # backtr &lt;- function(x){ # if(is.na(x)){ # return(NA) # } # if(x&gt;max(var.lst$nscore.tab[[i]]$nscore)){ # return(above.max.func(x)) # } # if(x&lt;min(var.lst$nscore.tab[[i]]$nscore)){ # return(below.min.func(x)) # } # else{ # return(interpolate(x)) # } # # } # # var.lst$kriged[[i]]$backtransformed &lt;- st_apply(var.lst$kriged[[i]][1], 1:3, backtr) # # sim_vec &lt;- c() # for(f in 1:sim_num){ # sim_vec &lt;- c(sum(var.lst$kriged[[i]][2,,,f]$backtransformed, na.rm = T), sim_vec) # } # # temp_df &lt;- data.frame(site = &quot;Sister3&quot;, date = &quot;2022-08-22&quot;, period = i, gas = &quot;CO2&quot;, sum_flux = sim_vec) # temp_df_sum &lt;- data.frame(site = &quot;Sister3&quot;, date = &quot;2022-08-22&quot;, period = i, gas = &quot;CO2&quot;, flux_2.5 = as.numeric(quantile(sim_vec, 0.025)), flux_97.5 = as.numeric(quantile(sim_vec, 0.975)), mean_flux = mean(sim_vec)) # sister3_22_co2_results &lt;- bind_rows(sister3_22_co2_results, temp_df) # sister3_22_co2_results_summarized &lt;- bind_rows(sister3_22_co2_results_summarized, temp_df_sum) # # } # # write.csv(sister3_22_co2_results_summarized, &quot;5-Results/1-kriged-estimates/sister3_22_co2_results_summarized.csv&quot;, row.names = F) Sister3 8/22/22 CH4 Estimate # sim_num &lt;- 500 # n_num &lt;- 500 # # periods &lt;- unique(sister3_pts_22$trip) # var.lst &lt;- list() # # for(i in 1:length(periods)){ # var.lst$data[[i]] &lt;- sister3_pts_22 %&gt;% filter(trip == periods[i]) # # # quantile-quantile normal score transform data # var.lst$data[[i]]$norm_ch4_g_hr &lt;- qqnorm(var.lst$data[[i]]$flux_ch4_g_hr, plot.it = F)$x # # var.lst$nscore.tab[[i]] &lt;- nscore(var.lst$data[[i]]$flux_ch4_g_hr) # # var.lst$var_df[[i]] &lt;- variogram(norm_ch4_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_ch4_g_hr) == F), cloud = T) # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # } # # # make a pdf of all of the experimental variograms # pdf(&quot;5-Results/1-kriged-estimates/variograms_sister3_20220822_ch4.pdf&quot;, paper=&quot;a4&quot;, width=9, height=12) # marrangeGrob(grobs=compact(var.lst$var_plot), nrow=4, ncol = 2) # dev.off() # # # # define theoretical variogram # sister3_22_var_ch4 &lt;- vgm(psill = 1, &quot;Sph&quot;, range = 5) # # # make interpolation grid # sister3_grid &lt;- st_as_stars(st_bbox(sister3), dx = 1, dy = 1) # sister3_grid &lt;- sister3_grid[sister3] # # # sister3_22_ch4_results &lt;- NULL # sister3_22_ch4_results_summarized &lt;- NULL # # for(i in 1:length(periods)){ # # #change nsim and nmax for runs # var.lst$kriged[[i]] &lt;- krige(norm_ch4_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_ch4_g_hr) == F), sister3_grid, model = sister3_22_var_ch4, nsim=sim_num, maxdist = Inf,nmin = 0,omax=Inf, beta = 0, nmax = n_num, debug.level = -1) # # # above.max.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][(nrow(var.lst$nscore.tab[[i]])-1):nrow(var.lst$nscore.tab[[i]]),]) # above.max.func &lt;- function(x){ # coefficients(above.max.lm)[[1]] + (coefficients(above.max.lm)[[2]]*x) # } # below.min.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][1:2,]) # below.min.func &lt;- function(x){ # coefficients(below.min.lm)[[1]] + (coefficients(below.min.lm)[[2]]*x) # } # # interpolate &lt;- approxfun(x=var.lst$nscore.tab[[i]]$nscore, y=var.lst$nscore.tab[[i]]$x) # backtr &lt;- function(x){ # if(is.na(x)){ # return(NA) # } # if(x&gt;max(var.lst$nscore.tab[[i]]$nscore)){ # return(above.max.func(x)) # } # if(x&lt;min(var.lst$nscore.tab[[i]]$nscore)){ # return(below.min.func(x)) # } # else{ # return(interpolate(x)) # } # # } # # var.lst$kriged[[i]]$backtransformed &lt;- st_apply(var.lst$kriged[[i]][1], 1:3, backtr) # # sim_vec &lt;- c() # for(f in 1:sim_num){ # sim_vec &lt;- c(sum(var.lst$kriged[[i]][2,,,f]$backtransformed, na.rm = T), sim_vec) # } # # temp_df &lt;- data.frame(site = &quot;Sister3&quot;, date = &quot;2022-08-22&quot;, period = i, gas = &quot;CH4&quot;, sum_flux = sim_vec) # temp_df_sum &lt;- data.frame(site = &quot;Sister3&quot;, date = &quot;2022-08-22&quot;, period = i, gas = &quot;CH4&quot;, flux_2.5 = as.numeric(quantile(sim_vec, 0.025)), flux_97.5 = as.numeric(quantile(sim_vec, 0.975)), mean_flux = mean(sim_vec)) # sister3_22_ch4_results &lt;- bind_rows(sister3_22_ch4_results, temp_df) # sister3_22_ch4_results_summarized &lt;- bind_rows(sister3_22_ch4_results_summarized, temp_df_sum) # # } # # write.csv(sister3_22_ch4_results_summarized, &quot;5-Results/1-kriged-estimates/sister3_22_ch4_results_summarized.csv&quot;, row.names = F) Pick 9/13/22 CO2 Estimate # # modeling with a trend # sim_num &lt;- 500 # n_num &lt;- 500 # # periods &lt;- unique(pick_pts_13$trip) # var.lst &lt;- list() # func_trend &lt;- as.formula(flux_co2_g_hr ~ x + y) # # pick_pts_13$x &lt;- st_coordinates(pick_pts_13) %&gt;% as.data.frame() %&gt;% pull(X) # pick_pts_13$y &lt;- st_coordinates(pick_pts_13) %&gt;% as.data.frame() %&gt;% pull(Y) # # for(i in 1:length(periods)){ # # var.lst$data[[i]] &lt;- pick_pts_13 %&gt;% filter(trip == periods[i]) # var.lst$lm[[i]] &lt;- lm(func_trend, data = var.lst$data[[i]]) # # var.lst$data[[i]]$resid_co2_g_hr &lt;- residuals(var.lst$lm[[i]]) # # # quantile-quantile normal score transform data # var.lst$data[[i]]$norm_co2_g_hr &lt;- qqnorm(var.lst$data[[i]]$resid_co2_g_hr, plot.it = F)$x # # var.lst$nscore.tab[[i]] &lt;- nscore(var.lst$data[[i]]$resid_co2_g_hr) # # var.lst$var_df[[i]] &lt;- variogram(norm_co2_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_co2_g_hr) == F), cloud = T) # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # } # # # make a pdf of all of the experimental variograms # pdf(&quot;5-Results/1-kriged-estimates/variograms_pick_20220913_co2.pdf&quot;, paper=&quot;a4&quot;, width=9, height=12) # marrangeGrob(grobs=compact(var.lst$var_plot), nrow=4, ncol = 2) # dev.off() # # # # define theoretical variogram # pick_13_var_co2 &lt;- vgm(psill = 1, &quot;Sph&quot;, range = 20) # # # make interpolation grid # pick_grid &lt;- st_as_stars(st_bbox(pick), dx = 1, dy = 1) # pick_grid &lt;- pick_grid[pick] # # pick_13_co2_results &lt;- NULL # pick_13_co2_results_summarized &lt;- NULL # # for(i in 1:length(periods)){ # # #change nsim and nmax for runs # var.lst$kriged[[i]] &lt;- krige(norm_co2_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_co2_g_hr) == F), pick_grid, model = pick_13_var_co2, nsim=sim_num, maxdist = Inf,nmin = 0,omax=Inf, beta = 0, nmax = n_num, debug.level = -1) # # # above.max.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][(nrow(var.lst$nscore.tab[[i]])-1):nrow(var.lst$nscore.tab[[i]]),]) # above.max.func &lt;- function(x){ # coefficients(above.max.lm)[[1]] + (coefficients(above.max.lm)[[2]]*x) # } # below.min.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][1:2,]) # below.min.func &lt;- function(x){ # coefficients(below.min.lm)[[1]] + (coefficients(below.min.lm)[[2]]*x) # } # # interpolate &lt;- approxfun(x=var.lst$nscore.tab[[i]]$nscore, y=var.lst$nscore.tab[[i]]$x) # backtr &lt;- function(x){ # if(is.na(x)){ # return(NA) # } # if(x&gt;max(var.lst$nscore.tab[[i]]$nscore)){ # return(above.max.func(x)) # } # if(x&lt;min(var.lst$nscore.tab[[i]]$nscore)){ # return(below.min.func(x)) # } # else{ # return(interpolate(x)) # } # # } # # var.lst$kriged[[i]]$backtransformed &lt;- st_apply(var.lst$kriged[[i]][1], 1:3, backtr) # # var.lst$kriged[[i]]$trend &lt;- predict(var.lst$kriged[[i]][2], var.lst$lm[[i]]) # # var.lst$kriged[[i]]$detrended &lt;- var.lst$kriged[[i]]$trend + var.lst$kriged[[i]]$backtransformed # # sim_vec &lt;- c() # for(f in 1:sim_num){ # sim_vec &lt;- c(sum(var.lst$kriged[[i]][4,,,f]$detrended, na.rm = T), sim_vec) # } # # temp_df &lt;- data.frame(site = &quot;Pick&quot;, date = &quot;2022-09-13&quot;, period = i, gas = &quot;CO2&quot;, sum_flux = sim_vec) # temp_df_sum &lt;- data.frame(site = &quot;Pick&quot;, date = &quot;2022-09-13&quot;, period = i, gas = &quot;CO2&quot;, flux_2.5 = as.numeric(quantile(sim_vec, 0.025)), flux_97.5 = as.numeric(quantile(sim_vec, 0.975)), mean_flux = mean(sim_vec)) # pick_13_co2_results &lt;- bind_rows(pick_13_co2_results, temp_df) # pick_13_co2_results_summarized &lt;- bind_rows(pick_13_co2_results_summarized, temp_df_sum) # # } # # write.csv(pick_13_co2_results_summarized, &quot;5-Results/1-kriged-estimates/pick_13_co2_results_summarized.csv&quot;, row.names = F) Pick 9/13/22 CH4 Estimate # sim_num &lt;- 500 # n_num &lt;- 500 # # periods &lt;- unique(pick_pts_13$trip) # var.lst &lt;- list() # # for(i in 1:length(periods)){ # var.lst$data[[i]] &lt;- pick_pts_13 %&gt;% filter(trip == periods[i]) # # # quantile-quantile normal score transform data # var.lst$data[[i]]$norm_ch4_g_hr &lt;- qqnorm(var.lst$data[[i]]$flux_ch4_g_hr, plot.it = F)$x # # var.lst$nscore.tab[[i]] &lt;- nscore(var.lst$data[[i]]$flux_ch4_g_hr) # # var.lst$var_df[[i]] &lt;- variogram(norm_ch4_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_ch4_g_hr) == F), cloud = T) # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # } # # # make a pdf of all of the experimental variograms # pdf(&quot;5-Results/1-kriged-estimates/variograms_pick_20220913_ch4.pdf&quot;, paper=&quot;a4&quot;, width=9, height=12) # marrangeGrob(grobs=compact(var.lst$var_plot), nrow=4, ncol = 2) # dev.off() # # # # define theoretical variogram # pick_13_var_ch4 &lt;- vgm(psill = 1, &quot;Sph&quot;, range = 20) # # # make interpolation grid # pick_grid &lt;- st_as_stars(st_bbox(pick), dx = 1, dy = 1) # pick_grid &lt;- pick_grid[pick] # # pick_13_ch4_results &lt;- NULL # pick_13_ch4_results_summarized &lt;- NULL # # for(i in 1:length(periods)){ # # #change nsim and nmax for runs # var.lst$kriged[[i]] &lt;- krige(norm_ch4_g_hr~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_ch4_g_hr) == F), pick_grid, model = pick_13_var_ch4, nsim=sim_num, maxdist = Inf,nmin = 0,omax=Inf, beta = 0, nmax = n_num, debug.level = -1) # # # above.max.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][(nrow(var.lst$nscore.tab[[i]])-1):nrow(var.lst$nscore.tab[[i]]),]) # above.max.func &lt;- function(x){ # coefficients(above.max.lm)[[1]] + (coefficients(above.max.lm)[[2]]*x) # } # below.min.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][1:2,]) # below.min.func &lt;- function(x){ # coefficients(below.min.lm)[[1]] + (coefficients(below.min.lm)[[2]]*x) # } # # interpolate &lt;- approxfun(x=var.lst$nscore.tab[[i]]$nscore, y=var.lst$nscore.tab[[i]]$x) # backtr &lt;- function(x){ # if(is.na(x)){ # return(NA) # } # if(x&gt;max(var.lst$nscore.tab[[i]]$nscore)){ # return(above.max.func(x)) # } # if(x&lt;min(var.lst$nscore.tab[[i]]$nscore)){ # return(below.min.func(x)) # } # else{ # return(interpolate(x)) # } # # } # # var.lst$kriged[[i]]$backtransformed &lt;- st_apply(var.lst$kriged[[i]][1], 1:3, backtr) # # sim_vec &lt;- c() # for(f in 1:sim_num){ # sim_vec &lt;- c(sum(var.lst$kriged[[i]][2,,,f]$backtransformed, na.rm = T), sim_vec) # } # # temp_df &lt;- data.frame(site = &quot;Pick&quot;, date = &quot;2022-09-13&quot;, period = i, gas = &quot;CH4&quot;, sum_flux = sim_vec) # temp_df_sum &lt;- data.frame(site = &quot;Pick&quot;, date = &quot;2022-09-13&quot;, period = i, gas = &quot;CH4&quot;, flux_2.5 = as.numeric(quantile(sim_vec, 0.025)), flux_97.5 = as.numeric(quantile(sim_vec, 0.975)), mean_flux = mean(sim_vec)) # pick_13_ch4_results &lt;- bind_rows(pick_13_ch4_results, temp_df) # pick_13_ch4_results_summarized &lt;- bind_rows(pick_13_ch4_results_summarized, temp_df_sum) # # } # # write.csv(pick_13_ch4_results_summarized, &quot;5-Results/1-kriged-estimates/pick_13_ch4_results_summarized.csv&quot;, row.names = F) "],["ebullition-estimates.html", "Chapter 7 Ebullition estimates", " Chapter 7 Ebullition estimates # load gas volumes and match traps with measured concentrations # ebullition_kriging &lt;- gas_vols %&gt;% # left_join(conc_match %&gt;% select(Trap, Collection.Date, period, corr_ch4), by = c(&quot;Trap&quot;, &quot;Collection.Date&quot;, &quot;period&quot;)) %&gt;% # mutate(row_id = row_number()) %&gt;% filter(!(row_id)%in% c(1201,1202, 1602,1603)) Deans 8/16/22 Ebullition Estimate # to run again # sim_num &lt;- 2 # n_num &lt;- 10 # # # create vector of ch4 concentrations # deans1_conc &lt;- read.csv(&quot;2-Clean Data/ebullition_concentrations.csv&quot;)%&gt;% # mutate(corr_ch4 = case_when( # Sample.Vol == 0.1 ~ Undiluted.CH4.conc.ppm * 0.473176497, # Sample.Vol == 0.2 ~ Undiluted.CH4.conc.ppm, # Sample.Vol == 1 ~ Undiluted.CH4.conc.ppm)) %&gt;% # filter(is.na(Data.Flag)==T) %&gt;% # left_join(samplings, by = &quot;Collection.Date&quot;) %&gt;% # filter(Sampling == &quot;Deans1&quot;) %&gt;% # pull(corr_ch4) # # # # # define theoretical variogram # dean_16_var_eb &lt;- vgm(psill = 1, &quot;Sph&quot;, range = 10) # # # define interpolation grid # dean_grid &lt;- st_as_stars(st_bbox(deans), dx = 1, dy = 1) # dean_grid &lt;- dean_grid[deans] # # deans_16_eb_results &lt;- NULL # deans_16_eb_results_summarized &lt;- NULL # # temp_df &lt;- NULL # # krige_par &lt;- function(b){ # # deans1_conc_vec &lt;- sample(deans1_conc, 200, replace=T) # # deans_16_eb_kr &lt;- deans_pts %&gt;% # full_join(ebullition_kriging %&gt;% # filter(Sampling == &quot;Deans1&quot;) %&gt;% # mutate(ch4_rand = deans1_conc_vec, # ch4_conc = if_else(is.na(corr_ch4), ch4_rand, corr_ch4)) %&gt;% # mutate(ch4_eb_g_m2_hr = gas_vol_corrected * (1/area) * (1/time_hr)* (1/10^6) * ch4_conc * (1/10^3) * 16.04 * (1/0.0821)* (1/293.15)), by = &quot;location&quot;) # # periods &lt;- unique(deans_16_eb_kr$period) # var.lst &lt;- list() # # for(i in 1:length(periods)){ # var.lst$data[[i]] &lt;- deans_16_eb_kr %&gt;% filter(period == periods[i]) # # # quantile-quantile normal score transform data # var.lst$data[[i]]$norm_eb &lt;- qqnorm(var.lst$data[[i]]$ch4_eb_g_m2_hr, plot.it = F)$x # # var.lst$nscore.tab[[i]] &lt;- nscore(var.lst$data[[i]]$ch4_eb_g_m2_hr) # # var.lst$var_df[[i]] &lt;- variogram(norm_eb~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_eb) == F), cloud = T) # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # # var.lst$kriged[[i]] &lt;- krige(norm_eb~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_eb) == F), dean_grid, model = dean_16_var_eb, nsim=sim_num, maxdist = Inf,nmin = 0,omax=Inf, beta = 0, nmax = n_num, debug.level = -1) # # above.max.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][(nrow(var.lst$nscore.tab[[i]])-1):nrow(var.lst$nscore.tab[[i]]),]) # above.max.func &lt;- function(x){ # coefficients(above.max.lm)[[1]] + (coefficients(above.max.lm)[[2]]*x) # } # below.min.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][1:2,]) # below.min.func &lt;- function(x){ # coefficients(below.min.lm)[[1]] + (coefficients(below.min.lm)[[2]]*x) # } # # interpolate &lt;- approxfun(x=var.lst$nscore.tab[[i]]$nscore, y=var.lst$nscore.tab[[i]]$x) # backtr &lt;- function(x){ # if(is.na(x)){ # return(NA) # } # if(x&gt;max(var.lst$nscore.tab[[i]]$nscore)){ # return(above.max.func(x)) # } # if(x&lt;min(var.lst$nscore.tab[[i]]$nscore)){ # return(below.min.func(x)) # } # else{ # return(interpolate(x)) # } # # } # # # var.lst$kriged[[i]]$backtransformed &lt;- st_apply(var.lst$kriged[[i]][1], 1:3, backtr) # # sim_vec &lt;- c() # for(f in 1:sim_num){ # sim_vec &lt;- c(sum(var.lst$kriged[[i]][2,,,f]$backtransformed, na.rm = T), sim_vec) # } # # temp_df &lt;- bind_rows(temp_df, data.frame(site = &quot;Deans&quot;, date = &quot;2022-08-16&quot;, period = i, gas = &quot;CH4&quot;, sum_flux = sim_vec)) # } # return(temp_df) # } # s_time &lt;- Sys.time() # temp_list &lt;- list() # temp_list &lt;- lapply(1:2, krige_par) # # deans_16_eb_results &lt;- bind_rows(temp_list) # e_time &lt;- Sys.time() # print(&quot;total time:&quot;) # print(e_time-s_time) # # write.csv(deans_16_eb_results,&quot;5-Results/1-kriged-estimates/deans_16_eb_results.csv&quot;) Deans 8/30/22 Ebullition Estimate # sim_num &lt;- 25 # n_num &lt;- 500 # # krige_par &lt;- function(b){ # deans2_conc_vec &lt;- sample(deans2_conc, 225, replace=T) # # deans_30_eb_kr &lt;- deans_pts %&gt;% # full_join(ebullition_kriging %&gt;% # filter(Sampling == &quot;Deans2&quot;) %&gt;% # mutate(ch4_rand = deans2_conc_vec, # ch4_conc = if_else(is.na(corr_ch4), ch4_rand, corr_ch4)) %&gt;% # mutate(ch4_eb_g_m2_hr = gas_vol_corrected * (1/area) * (1/time_hr)* (1/10^6) * ch4_conc * (1/10^3) * 16.04 * (1/0.0821)* (1/293.15)), by = &quot;location&quot;) # # periods &lt;- unique(deans_30_eb_kr$period) # var.lst &lt;- list() # # temp_df &lt;- NULL # # for(i in 1:length(periods)){ # var.lst$data[[i]] &lt;- deans_30_eb_kr %&gt;% filter(period == periods[i]) # # # quantile-quantile normal score transform data # var.lst$data[[i]]$norm_eb &lt;- qqnorm(var.lst$data[[i]]$ch4_eb_g_m2_hr, plot.it = F)$x # # var.lst$nscore.tab[[i]] &lt;- nscore(var.lst$data[[i]]$ch4_eb_g_m2_hr) # # var.lst$var_df[[i]] &lt;- variogram(norm_eb~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_eb) == F), cloud = T) # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # # var.lst$kriged[[i]] &lt;- krige(norm_eb~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_eb) == F), dean_grid, model = dean_30_var_eb, nsim=sim_num, maxdist = Inf,nmin = 0,omax=Inf, beta = 0, nmax = n_num, debug.level = -1) # # above.max.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][(nrow(var.lst$nscore.tab[[i]])-1):nrow(var.lst$nscore.tab[[i]]),]) # above.max.func &lt;- function(x){ # coefficients(above.max.lm)[[1]] + (coefficients(above.max.lm)[[2]]*x) # } # below.min.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][1:2,]) # below.min.func &lt;- function(x){ # coefficients(below.min.lm)[[1]] + (coefficients(below.min.lm)[[2]]*x) # } # # interpolate &lt;- approxfun(x=var.lst$nscore.tab[[i]]$nscore, y=var.lst$nscore.tab[[i]]$x) # backtr &lt;- function(x){ # if(is.na(x)){ # return(NA) # } # if(x&gt;max(var.lst$nscore.tab[[i]]$nscore)){ # return(above.max.func(x)) # } # if(x&lt;min(var.lst$nscore.tab[[i]]$nscore)){ # return(below.min.func(x)) # } # else{ # return(interpolate(x)) # } # # } # # var.lst$kriged[[i]]$backtransformed &lt;- st_apply(var.lst$kriged[[i]][1], 1:3, backtr) # # sim_vec &lt;- c() # for(f in 1:sim_num){ # sim_vec &lt;- c(sum(var.lst$kriged[[i]][2,,,f]$backtransformed, na.rm = T), sim_vec) # } # # temp_df &lt;- bind_rows(temp_df, data.frame(site = &quot;Deans&quot;, date = &quot;2022-08-30&quot;, period = i, gas = &quot;CH4&quot;, sum_flux = sim_vec)) # } # return(temp_df) # } # s_time &lt;- Sys.time() # temp_list &lt;- list() # temp_list &lt;- mclapply(1:20, krige_par) # # deans_30_eb_results &lt;- bind_rows(temp_list) # e_time &lt;- Sys.time() # print(&quot;total time:&quot;) # print(e_time-s_time) # # write.csv(deans_30_eb_results,&quot;5-Results/1-kriged-estimates/deans_30_eb_results.csv&quot;) Catfish 9/06/22 Ebullition Estimate # catfish1_conc &lt;- read.csv(&quot;2-Clean Data/ebullition_concentrations.csv&quot;)%&gt;% # mutate(corr_ch4 = case_when( # Sample.Vol == 0.1 ~ Undiluted.CH4.conc.ppm * 0.473176497, # Sample.Vol == 0.2 ~ Undiluted.CH4.conc.ppm, # Sample.Vol == 1 ~ Undiluted.CH4.conc.ppm)) %&gt;% # filter(is.na(Data.Flag)==T) %&gt;% # left_join(samplings, by = &quot;Collection.Date&quot;) %&gt;% # filter(Sampling == &quot;Catfish1&quot;) %&gt;% # pull(corr_ch4) # # # define theoretical variogram # catfish_06_var_eb &lt;- vgm(psill = 1, &quot;Sph&quot;, range = 10) # # # define interpolation grid # catfish_grid &lt;- st_as_stars(st_bbox(catfish), dx = 1, dy = 1) # catfish_grid &lt;- catfish_grid[catfish] # # catfish_06_eb_results &lt;- NULL # catfish_06_eb_results_summarized &lt;- NULL # # # # generate variogram based only on volume # # # # catfish_18_eb_kr &lt;- catfish_pts %&gt;% # # full_join(ebullition_kriging %&gt;% # # filter(Sampling == &quot;Catfish2&quot;), by = &quot;location&quot;) # # # # periods &lt;- unique(catfish_18_eb_kr$period) # # var.lst &lt;- list() # # # # # # for(i in 1:length(periods)){ # # var.lst$data[[i]] &lt;- catfish_18_eb_kr %&gt;% filter(period == periods[i]) # # # # # quantile-quantile normal score transform data # # var.lst$data[[i]]$vol_norm &lt;- qqnorm(var.lst$data[[i]]$gas_vol_corrected, plot.it = F)$x # # # # var.lst$var_df[[i]] &lt;- variogram(vol_norm~1, var.lst$data[[i]] %&gt;% filter(is.na(vol_norm) == F), cloud = T) # # # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # } # # # # pdf(&quot;5-Results/1-kriged-estimates/variograms_catfish_20220918_eb.pdf&quot;, paper=&quot;a4&quot;, width=9, height=12) # # marrangeGrob(grobs=compact(var.lst$var_plot), nrow=4, ncol = 2) # # dev.off() # # sim_num &lt;- 25 # n_num &lt;- 500 # # krige_par &lt;- function(b){ # catfish1_conc_vec &lt;- sample(catfish1_conc, 225, replace=T) # # catfish_06_eb_kr &lt;- catfish_pts %&gt;% # full_join(ebullition_kriging %&gt;% # filter(Sampling == &quot;Catfish1&quot;) %&gt;% # mutate(ch4_rand = catfish1_conc_vec, # ch4_conc = if_else(is.na(corr_ch4), ch4_rand, corr_ch4)) %&gt;% # mutate(ch4_eb_g_m2_hr = gas_vol_corrected * (1/area) * (1/time_hr)* (1/10^6) * ch4_conc * (1/10^3) * 16.04 * (1/0.0821)* (1/293.15)), by = &quot;location&quot;) # # periods &lt;- unique(catfish_06_eb_kr$period) # var.lst &lt;- list() # # temp_df &lt;- NULL # # for(i in 1:length(periods)){ # var.lst$data[[i]] &lt;- catfish_06_eb_kr %&gt;% filter(period == periods[i]) # # # quantile-quantile normal score transform data # var.lst$data[[i]]$norm_eb &lt;- qqnorm(var.lst$data[[i]]$ch4_eb_g_m2_hr, plot.it = F)$x # # var.lst$nscore.tab[[i]] &lt;- nscore(var.lst$data[[i]]$ch4_eb_g_m2_hr) # # var.lst$var_df[[i]] &lt;- variogram(norm_eb~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_eb) == F), cloud = T) # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # # var.lst$kriged[[i]] &lt;- krige(norm_eb~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_eb) == F), catfish_grid, model = catfish_06_var_eb, nsim=sim_num, maxdist = Inf,nmin = 0,omax=Inf, beta = 0, nmax = n_num, debug.level = -1) # # above.max.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][(nrow(var.lst$nscore.tab[[i]])-1):nrow(var.lst$nscore.tab[[i]]),]) # above.max.func &lt;- function(x){ # coefficients(above.max.lm)[[1]] + (coefficients(above.max.lm)[[2]]*x) # } # below.min.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][1:2,]) # below.min.func &lt;- function(x){ # coefficients(below.min.lm)[[1]] + (coefficients(below.min.lm)[[2]]*x) # } # # interpolate &lt;- approxfun(x=var.lst$nscore.tab[[i]]$nscore, y=var.lst$nscore.tab[[i]]$x) # backtr &lt;- function(x){ # if(is.na(x)){ # return(NA) # } # if(x&gt;max(var.lst$nscore.tab[[i]]$nscore)){ # return(above.max.func(x)) # } # if(x&lt;min(var.lst$nscore.tab[[i]]$nscore)){ # return(below.min.func(x)) # } # else{ # return(interpolate(x)) # } # # } # # var.lst$kriged[[i]]$backtransformed &lt;- st_apply(var.lst$kriged[[i]][1], 1:3, backtr) # # sim_vec &lt;- c() # for(f in 1:sim_num){ # sim_vec &lt;- c(sum(var.lst$kriged[[i]][2,,,f]$backtransformed, na.rm = T), sim_vec) # } # # temp_df &lt;- bind_rows(temp_df, data.frame(site = &quot;Catfish&quot;, date = &quot;2022-09-06&quot;, period = i, gas = &quot;CH4&quot;, sum_flux = sim_vec)) # } # return(temp_df) # } # s_time &lt;- Sys.time() # temp_list &lt;- list() # temp_list &lt;- lapply(1:20, krige_par) # # catfish_06_eb_results &lt;- bind_rows(temp_list) # e_time &lt;- Sys.time() # print(&quot;total time:&quot;) # print(e_time-s_time) # # write.csv(catfish_06_eb_results,&quot;5-Results/1-kriged-estimates/catfish_06_eb_results.csv&quot;) Catfish 9/18/22 Ebullition Estimate # # create vector of ch4 concentrations # catfish2_conc &lt;- read.csv(&quot;2-Clean Data/ebullition_concentrations.csv&quot;)%&gt;% # mutate(corr_ch4 = case_when( # Sample.Vol == 0.1 ~ Undiluted.CH4.conc.ppm * 0.473176497, # Sample.Vol == 0.2 ~ Undiluted.CH4.conc.ppm, # Sample.Vol == 1 ~ Undiluted.CH4.conc.ppm)) %&gt;% # filter(is.na(Data.Flag)==T) %&gt;% # left_join(samplings, by = &quot;Collection.Date&quot;) %&gt;% # filter(Sampling == &quot;Catfish2&quot;) %&gt;% # pull(corr_ch4) # # # define theoretical variogram # catfish_18_var_eb &lt;- vgm(psill = 1, &quot;Sph&quot;, range = 10) # # # define interpolation grid # catfish_grid &lt;- st_as_stars(st_bbox(catfish), dx = 1, dy = 1) # catfish_grid &lt;- catfish_grid[catfish] # # catfish_18_eb_results &lt;- NULL # catfish_18_eb_results_summarized &lt;- NULL # # # # generate variogram based only on volume # # # # catfish_18_eb_kr &lt;- catfish_pts %&gt;% # # full_join(ebullition_kriging %&gt;% # # filter(Sampling == &quot;Catfish2&quot;), by = &quot;location&quot;) # # # # periods &lt;- unique(catfish_18_eb_kr$period) # # var.lst &lt;- list() # # # # # # for(i in 1:length(periods)){ # # var.lst$data[[i]] &lt;- catfish_18_eb_kr %&gt;% filter(period == periods[i]) # # # # # quantile-quantile normal score transform data # # var.lst$data[[i]]$vol_norm &lt;- qqnorm(var.lst$data[[i]]$gas_vol_corrected, plot.it = F)$x # # # # var.lst$var_df[[i]] &lt;- variogram(vol_norm~1, var.lst$data[[i]] %&gt;% filter(is.na(vol_norm) == F), cloud = T) # # # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # } # # # # pdf(&quot;variograms_catfish_20220918_eb.pdf&quot;, paper=&quot;a4&quot;, width=9, height=12) # # marrangeGrob(grobs=compact(var.lst$var_plot), nrow=4, ncol = 2) # # dev.off() # # sim_num &lt;- 25 # n_num &lt;- 500 # # krige_par &lt;- function(b){ # catfish2_conc_vec &lt;- sample(catfish2_conc, 225, replace=T) # # catfish_18_eb_kr &lt;- catfish_pts %&gt;% # full_join(ebullition_kriging %&gt;% # filter(Sampling == &quot;Catfish2&quot;) %&gt;% # mutate(ch4_rand = catfish2_conc_vec, # ch4_conc = if_else(is.na(corr_ch4), ch4_rand, corr_ch4)) %&gt;% # mutate(ch4_eb_g_m2_hr = gas_vol_corrected * (1/area) * (1/time_hr)* (1/10^6) * ch4_conc * (1/10^3) * 16.04 * (1/0.0821)* (1/293.15)), by = &quot;location&quot;) # # periods &lt;- unique(catfish_18_eb_kr$period) # var.lst &lt;- list() # # temp_df &lt;- NULL # # for(i in 1:length(periods)){ # var.lst$data[[i]] &lt;- catfish_18_eb_kr %&gt;% filter(period == periods[i]) # # # quantile-quantile normal score transform data # var.lst$data[[i]]$norm_eb &lt;- qqnorm(var.lst$data[[i]]$ch4_eb_g_m2_hr, plot.it = F)$x # # var.lst$nscore.tab[[i]] &lt;- nscore(var.lst$data[[i]]$ch4_eb_g_m2_hr) # # var.lst$var_df[[i]] &lt;- variogram(norm_eb~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_eb) == F), cloud = T) # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # # var.lst$kriged[[i]] &lt;- krige(norm_eb~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_eb) == F), catfish_grid, model = catfish_18_var_eb, nsim=sim_num, maxdist = Inf,nmin = 0,omax=Inf, beta = 0, nmax = n_num, debug.level = -1) # # above.max.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][(nrow(var.lst$nscore.tab[[i]])-1):nrow(var.lst$nscore.tab[[i]]),]) # above.max.func &lt;- function(x){ # coefficients(above.max.lm)[[1]] + (coefficients(above.max.lm)[[2]]*x) # } # below.min.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][1:2,]) # below.min.func &lt;- function(x){ # coefficients(below.min.lm)[[1]] + (coefficients(below.min.lm)[[2]]*x) # } # # interpolate &lt;- approxfun(x=var.lst$nscore.tab[[i]]$nscore, y=var.lst$nscore.tab[[i]]$x) # backtr &lt;- function(x){ # if(is.na(x)){ # return(NA) # } # if(x&gt;max(var.lst$nscore.tab[[i]]$nscore)){ # return(above.max.func(x)) # } # if(x&lt;min(var.lst$nscore.tab[[i]]$nscore)){ # return(below.min.func(x)) # } # else{ # return(interpolate(x)) # } # # } # # var.lst$kriged[[i]]$backtransformed &lt;- st_apply(var.lst$kriged[[i]][1], 1:3, backtr) # # sim_vec &lt;- c() # for(f in 1:sim_num){ # sim_vec &lt;- c(sum(var.lst$kriged[[i]][2,,,f]$backtransformed, na.rm = T), sim_vec) # } # # temp_df &lt;- bind_rows(temp_df, data.frame(site = &quot;Catfish&quot;, date = &quot;2022-09-18&quot;, period = i, gas = &quot;CH4&quot;, sum_flux = sim_vec)) # } # return(temp_df) # } # s_time &lt;- Sys.time() # temp_list &lt;- list() # temp_list &lt;- lapply(1:20, krige_par) # # catfish_18_eb_results &lt;- bind_rows(temp_list) # e_time &lt;- Sys.time() # print(&quot;total time:&quot;) # print(e_time-s_time) # # write.csv(catfish_18_eb_results,&quot;5-Results/1-kriged-estimates/catfish_18_eb_results.csv&quot;) Pick 9/13/22 Ebullition Estimate # # create vector of ch4 concentrations # pick1_conc &lt;- read.csv(&quot;2-Clean Data/ebullition_concentrations.csv&quot;)%&gt;% # mutate(corr_ch4 = case_when( # Sample.Vol == 0.1 ~ Undiluted.CH4.conc.ppm * 0.473176497, # Sample.Vol == 0.2 ~ Undiluted.CH4.conc.ppm, # Sample.Vol == 1 ~ Undiluted.CH4.conc.ppm)) %&gt;% # filter(is.na(Data.Flag)==T) %&gt;% # left_join(samplings, by = &quot;Collection.Date&quot;) %&gt;% # filter(Sampling == &quot;Pick1&quot;) %&gt;% # pull(corr_ch4) # # # define theoretical variogram # pick_13_var_eb &lt;- vgm(psill = 1, &quot;Sph&quot;, range = 10) # # # define interpolation grid # pick_grid &lt;- st_as_stars(st_bbox(pick), dx = 1, dy = 1) # pick_grid &lt;- pick_grid[pick] # # pick_13_eb_results &lt;- NULL # pick_13_eb_results_summarized &lt;- NULL # # # generate variogram based only on volume # # # pick_13_eb_kr &lt;- pick_pts %&gt;% # # full_join(ebullition_kriging %&gt;% # # filter(Sampling == &quot;Pick1&quot;), by = &quot;location&quot;) # # # # periods &lt;- unique(pick_13_eb_kr$period) # # var.lst &lt;- list() # # # # # # for(i in 1:length(periods)){ # # var.lst$data[[i]] &lt;- pick_13_eb_kr %&gt;% filter(period == periods[i]) # # # # # quantile-quantile normal score transform data # # var.lst$data[[i]]$vol_norm &lt;- qqnorm(var.lst$data[[i]]$gas_vol_corrected, plot.it = F)$x # # # # var.lst$var_df[[i]] &lt;- variogram(vol_norm~1, var.lst$data[[i]] %&gt;% filter(is.na(vol_norm) == F), cloud = T) # # # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # } # # # # pdf(&quot;5-Results/1-kriged-estimates/variograms_pick_20220913_eb.pdf&quot;, paper=&quot;a4&quot;, width=9, height=12) # # marrangeGrob(grobs=compact(var.lst$var_plot), nrow=4, ncol = 2) # # dev.off() # # sim_num &lt;- 25 # n_num &lt;- 500 # # krige_par &lt;- function(b){ # pick1_conc_vec &lt;- sample(pick1_conc, 224, replace=T) # # pick_13_eb_kr &lt;- pick_pts %&gt;% # full_join(ebullition_kriging %&gt;% # filter(Sampling == &quot;Pick1&quot;) %&gt;% # mutate(ch4_rand = pick1_conc_vec, # ch4_conc = if_else(is.na(corr_ch4), ch4_rand, corr_ch4)) %&gt;% # mutate(ch4_eb_g_m2_hr = gas_vol_corrected * (1/area) * (1/time_hr)* (1/10^6) * ch4_conc * (1/10^3) * 16.04 * (1/0.0821)* (1/293.15)), by = &quot;location&quot;) # # periods &lt;- unique(pick_13_eb_kr$period) # var.lst &lt;- list() # # temp_df &lt;- NULL # # for(i in 1:length(periods)){ # var.lst$data[[i]] &lt;- pick_13_eb_kr %&gt;% filter(period == periods[i]) # # # quantile-quantile normal score transform data # var.lst$data[[i]]$norm_eb &lt;- qqnorm(var.lst$data[[i]]$ch4_eb_g_m2_hr, plot.it = F)$x # # var.lst$nscore.tab[[i]] &lt;- nscore(var.lst$data[[i]]$ch4_eb_g_m2_hr) # # var.lst$var_df[[i]] &lt;- variogram(norm_eb~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_eb) == F), cloud = T) # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # # var.lst$kriged[[i]] &lt;- krige(norm_eb~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_eb) == F), pick_grid, model = pick_13_var_eb, nsim=sim_num, maxdist = Inf,nmin = 0,omax=Inf, beta = 0, nmax = n_num, debug.level = -1) # # above.max.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][(nrow(var.lst$nscore.tab[[i]])-1):nrow(var.lst$nscore.tab[[i]]),]) # above.max.func &lt;- function(x){ # coefficients(above.max.lm)[[1]] + (coefficients(above.max.lm)[[2]]*x) # } # below.min.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][1:2,]) # below.min.func &lt;- function(x){ # coefficients(below.min.lm)[[1]] + (coefficients(below.min.lm)[[2]]*x) # } # # interpolate &lt;- approxfun(x=var.lst$nscore.tab[[i]]$nscore, y=var.lst$nscore.tab[[i]]$x) # backtr &lt;- function(x){ # if(is.na(x)){ # return(NA) # } # if(x&gt;max(var.lst$nscore.tab[[i]]$nscore)){ # return(above.max.func(x)) # } # if(x&lt;min(var.lst$nscore.tab[[i]]$nscore)){ # return(below.min.func(x)) # } # else{ # return(interpolate(x)) # } # # } # # var.lst$kriged[[i]]$backtransformed &lt;- st_apply(var.lst$kriged[[i]][1], 1:3, backtr) # # sim_vec &lt;- c() # for(f in 1:sim_num){ # sim_vec &lt;- c(sum(var.lst$kriged[[i]][2,,,f]$backtransformed, na.rm = T), sim_vec) # } # # temp_df &lt;- bind_rows(temp_df, data.frame(site = &quot;Pick&quot;, date = &quot;2022-09-13&quot;, period = i, gas = &quot;CH4&quot;, sum_flux = sim_vec)) # } # return(temp_df) # } # s_time &lt;- Sys.time() # temp_list &lt;- list() # temp_list &lt;- lapply(1:20, krige_par) # # pick_13_eb_results &lt;- bind_rows(temp_list) # e_time &lt;- Sys.time() # print(&quot;total time:&quot;) # print(e_time-s_time) # # write.csv(pick_13_eb_results,&quot;5-Results/1-kriged-estimates/pick_13_eb_results.csv&quot;) Sister3 22 Ebullition Estimate # # create vector of ch4 concentrations # sister3_conc &lt;- read.csv(&quot;2-Clean Data/ebullition_concentrations.csv&quot;)%&gt;% # mutate(corr_ch4 = case_when( # Sample.Vol == 0.1 ~ Undiluted.CH4.conc.ppm * 0.473176497, # Sample.Vol == 0.2 ~ Undiluted.CH4.conc.ppm, # Sample.Vol == 1 ~ Undiluted.CH4.conc.ppm)) %&gt;% # filter(is.na(Data.Flag)==T) %&gt;% # left_join(samplings, by = &quot;Collection.Date&quot;) %&gt;% # filter(Sampling == &quot;Sister31&quot;) %&gt;% # pull(corr_ch4) # # # define theoretical variogram # sister3_22_var_eb &lt;- vgm(psill = 1, &quot;Sph&quot;, range = 6) # # # define interpolation grid # sister3_grid &lt;- st_as_stars(st_bbox(sister3), dx = 1, dy = 1) # sister3_grid &lt;- sister3_grid[sister3] # # sister3_22_eb_results &lt;- NULL # sister3_22_eb_results_summarized &lt;- NULL # # # generate variogram based only on volume # # # sister3_22_eb_kr &lt;- sister3_pts %&gt;% # # full_join(ebullition_kriging %&gt;% # # filter(Sampling == &quot;Sister31&quot;), by = &quot;location&quot;) # # # # periods &lt;- unique(sister3_22_eb_kr$period) # # var.lst &lt;- list() # # # # # # for(i in 1:length(periods)){ # # var.lst$data[[i]] &lt;- sister3_22_eb_kr %&gt;% filter(period == periods[i]) # # # # # quantile-quantile normal score transform data # # var.lst$data[[i]]$vol_norm &lt;- qqnorm(var.lst$data[[i]]$gas_vol_corrected, plot.it = F)$x # # # # var.lst$var_df[[i]] &lt;- variogram(vol_norm~1, var.lst$data[[i]] %&gt;% filter(is.na(vol_norm) == F), cloud = T) # # # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # } # # # # pdf(&quot;5-Results/1-kriged-estimates/variograms_sister3_20220822_eb.pdf&quot;, paper=&quot;a4&quot;, width=9, height=12) # # marrangeGrob(grobs=compact(var.lst$var_plot), nrow=4, ncol = 2) # # dev.off() # # sim_num &lt;- 25 # n_num &lt;- 500 # # krige_par &lt;- function(b){ # sister3_conc_vec &lt;- sample(sister3_conc, 223, replace=T) # # sister3_22_eb_kr &lt;- sister3_pts %&gt;% # full_join(ebullition_kriging %&gt;% # filter(Sampling == &quot;Sister31&quot;) %&gt;% # mutate(ch4_rand = sister3_conc_vec, # ch4_conc = if_else(is.na(corr_ch4), ch4_rand, corr_ch4)) %&gt;% # mutate(ch4_eb_g_m2_hr = gas_vol_corrected * (1/area) * (1/time_hr)* (1/10^6) * ch4_conc * (1/10^3) * 16.04 * (1/0.0821)* (1/293.15)), by = &quot;location&quot;) # # periods &lt;- unique(sister3_22_eb_kr$period) # var.lst &lt;- list() # # temp_df &lt;- NULL # # for(i in 1:length(periods)){ # var.lst$data[[i]] &lt;- sister3_22_eb_kr %&gt;% filter(period == periods[i]) # # # quantile-quantile normal score transform data # var.lst$data[[i]]$norm_eb &lt;- qqnorm(var.lst$data[[i]]$ch4_eb_g_m2_hr, plot.it = F)$x # # var.lst$nscore.tab[[i]] &lt;- nscore(var.lst$data[[i]]$ch4_eb_g_m2_hr) # # var.lst$var_df[[i]] &lt;- variogram(norm_eb~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_eb) == F), cloud = T) # # var.lst$var_plot[[i]] &lt;- ggplot(var.lst$var_df[[i]], aes(dist, gamma))+geom_point(size =2)+theme_bw()+labs(title = periods[i]) # # # var.lst$kriged[[i]] &lt;- krige(norm_eb~1, var.lst$data[[i]] %&gt;% filter(is.na(norm_eb) == F), sister3_grid, model = sister3_22_var_eb, nsim=sim_num, maxdist = Inf,nmin = 0,omax=Inf, beta = 0, nmax = n_num, debug.level = -1) # # above.max.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][(nrow(var.lst$nscore.tab[[i]])-1):nrow(var.lst$nscore.tab[[i]]),]) # above.max.func &lt;- function(x){ # coefficients(above.max.lm)[[1]] + (coefficients(above.max.lm)[[2]]*x) # } # below.min.lm &lt;- lm(x~nscore, data=var.lst$nscore.tab[[i]][1:2,]) # below.min.func &lt;- function(x){ # coefficients(below.min.lm)[[1]] + (coefficients(below.min.lm)[[2]]*x) # } # # interpolate &lt;- approxfun(x=var.lst$nscore.tab[[i]]$nscore, y=var.lst$nscore.tab[[i]]$x) # backtr &lt;- function(x){ # if(is.na(x)){ # return(NA) # } # if(x&gt;max(var.lst$nscore.tab[[i]]$nscore)){ # return(above.max.func(x)) # } # if(x&lt;min(var.lst$nscore.tab[[i]]$nscore)){ # return(below.min.func(x)) # } # else{ # return(interpolate(x)) # } # # } # # var.lst$kriged[[i]]$backtransformed &lt;- st_apply(var.lst$kriged[[i]][1], 1:3, backtr) # # sim_vec &lt;- c() # for(f in 1:sim_num){ # sim_vec &lt;- c(sum(var.lst$kriged[[i]][2,,,f]$backtransformed, na.rm = T), sim_vec) # } # # temp_df &lt;- bind_rows(temp_df, data.frame(site = &quot;Sister3&quot;, date = &quot;2022-08-22&quot;, period = i, gas = &quot;CH4&quot;, sum_flux = sim_vec)) # } # return(temp_df) # } # s_time &lt;- Sys.time() # temp_list &lt;- list() # temp_list &lt;- lapply(1:20, krige_par) # # sister3_22_eb_results &lt;- bind_rows(temp_list) # e_time &lt;- Sys.time() # print(&quot;total time:&quot;) # print(e_time-s_time) # # write.csv(sister3_22_eb_results,&quot;5-Results/1-kriged-estimates/sister3_22_eb_results.csv&quot;) "],["flux-summary-stats-prep.html", "Chapter 8 Flux summary stats prep", " Chapter 8 Flux summary stats prep Deans 8/16/22 Will need to rerun this # deans1_conc &lt;- read.csv(&quot;2-Clean Data/ebullition_concentrations.csv&quot;)%&gt;% # mutate(corr_ch4 = case_when( # Sample.Vol == 0.1 ~ Undiluted.CH4.conc.ppm * 0.473176497, # Sample.Vol == 0.2 ~ Undiluted.CH4.conc.ppm, # Sample.Vol == 1 ~ Undiluted.CH4.conc.ppm)) %&gt;% # filter(is.na(Data.Flag)==T) %&gt;% # left_join(samplings, by = &quot;Collection.Date&quot;) %&gt;% # filter(Sampling == &quot;Deans1&quot;) %&gt;% # pull(corr_ch4) # # deans1_conc_vec &lt;- sample(deans1_conc, 200, replace=T) # # deans_16_eb_kr &lt;- deans_pts %&gt;% # full_join(ebullition_kriging %&gt;% # filter(Sampling == &quot;Deans1&quot;) %&gt;% # mutate(ch4_rand = deans1_conc_vec, # ch4_conc = if_else(is.na(corr_ch4), ch4_rand, corr_ch4)) %&gt;% # mutate(ch4_eb_g_m2_hr = gas_vol_corrected * (1/area) * (1/time_hr)* (1/10^6) * ch4_conc * (1/10^3) * 16.04 * (1/0.0821)* (1/293.15)), by = &quot;location&quot;) # # deans_16_eb_results &lt;- read.csv(&quot;5-Results/1-kriged-estimates/deans_16_eb_results.csv&quot;) # deans_16_eb_results_summarized &lt;- NULL # # for(i in 1:length(periods)){ # temp &lt;- deans_16_eb_results %&gt;% filter(period == periods[i]) %&gt;% pull(sum_flux) # # temp_df &lt;- data.frame(site = &quot;Deans&quot;, date = &quot;2022-08-16&quot;, period = i, flux_2.5 = as.numeric(quantile(temp, 0.025)), flux_97.5 = as.numeric(quantile(temp, 0.975)), mean_flux = mean(temp)) # # deans_16_eb_results_summarized &lt;- bind_rows(deans_16_eb_results_summarized, temp_df) # } # # deans_16_eb_results_summarized &lt;- deans_16_eb_results_summarized %&gt;% mutate(period= periods[period])%&gt;% left_join(ebullition_kriging %&gt;% filter(Sampling == &quot;Deans1&quot;) %&gt;% group_by(period) %&gt;% summarize(avg_time = mean(time_hr, na.rm = T)), by = &quot;period&quot;) # # ggplot(deans_16_eb_results_summarized, aes(period, mean_flux))+ # geom_point()+ # geom_errorbar(aes(ymin = flux_2.5, ymax = flux_97.5))+ # ylab(&quot;total ebullition (g/hr)&quot;) # # # calculating by averaging instead of kriging # deans_16_eb_kr %&gt;% # mutate(eb_avg = gas_vol_corrected * (1/area) * (1/time_hr)* (1/10^6) * mean(deans1_conc) * (1/10^3) * 16.04 * (1/0.0821)* (1/293.15)) %&gt;% # group_by(period) %&gt;% # summarize(average_eb = mean(eb_avg, na.rm=T)) %&gt;% # mutate(average_eb = average_eb * st_area(deans) %&gt;% as.numeric()) %&gt;% # left_join(ebullition_kriging %&gt;% # filter(Sampling == &quot;Deans1&quot;) %&gt;% # group_by(period) %&gt;% # summarize(avg_time = mean(time_hr, na.rm = T)), by = &quot;period&quot;) %&gt;% # mutate(flux_g = average_eb * avg_time)%&gt;% # summarize(sum_flux = sum(flux_g)) %&gt;% # mutate(sum_flux_g_m2_day = sum_flux/st_area(deans)) # # write.csv(deans_16_eb_results_summarized %&gt;% filter(period!=&quot;8~9&quot;), &quot;5-Results/1-kriged-estimates/deans_16_eb_results_summarized.csv&quot;) Deans 8/30/22 # deans_30_eb_results &lt;- read.csv(&quot;5-Results/1-kriged-estimates/deans_30_eb_results.csv&quot;) # deans_30_eb_results_summarized &lt;- NULL # # deans2_conc &lt;- read.csv(&quot;2-Clean Data/ebullition_concentrations.csv&quot;)%&gt;% # mutate(corr_ch4 = case_when( # Sample.Vol == 0.1 ~ Undiluted.CH4.conc.ppm * 0.473176497, # Sample.Vol == 0.2 ~ Undiluted.CH4.conc.ppm, # Sample.Vol == 1 ~ Undiluted.CH4.conc.ppm)) %&gt;% # filter(is.na(Data.Flag)==T) %&gt;% # left_join(samplings, by = &quot;Collection.Date&quot;) %&gt;% # filter(Sampling == &quot;Deans2&quot;) %&gt;% # pull(corr_ch4) # # deans2_conc_vec &lt;- sample(deans2_conc, 225, replace=T) # # deans_30_eb_kr &lt;- deans_pts %&gt;% # full_join(ebullition_kriging %&gt;% # filter(Sampling == &quot;Deans2&quot;) %&gt;% # mutate(ch4_rand = deans2_conc_vec, # ch4_conc = if_else(is.na(corr_ch4), ch4_rand, corr_ch4))) # # for(i in 1:length(periods)){ # temp &lt;- deans_30_eb_results %&gt;% filter(period == i) %&gt;% pull(sum_flux) # # temp_df &lt;- data.frame(site = &quot;Deans&quot;, date = &quot;2022-08-30&quot;, period = i, flux_2.5 = as.numeric(quantile(temp, 0.025)), flux_97.5 = as.numeric(quantile(temp, 0.975)), mean_flux = mean(temp)) # # deans_30_eb_results_summarized &lt;- bind_rows(deans_30_eb_results_summarized, temp_df) # } # # deans_30_eb_results_summarized &lt;- deans_30_eb_results_summarized %&gt;% mutate(period= periods[period])%&gt;% left_join(ebullition_kriging %&gt;% filter(Sampling == &quot;Deans2&quot;) %&gt;% group_by(period) %&gt;% summarize(avg_time = mean(time_hr, na.rm = T)), by = &quot;period&quot;) # # ggplot(deans_30_eb_results_summarized, aes(period, mean_flux))+ # geom_point()+ # geom_errorbar(aes(ymin = flux_2.5, ymax = flux_97.5))+ # ylab(&quot;total ebullition (g/hr)&quot;) # # # calculating by averaging instead of kriging # deans_30_eb_kr %&gt;% # mutate(eb_avg = gas_vol_corrected * (1/area) * (1/time_hr)* (1/10^6) * mean(deans2_conc) * (1/10^3) * 16.04 * (1/0.0821)* (1/293.15)) %&gt;% # group_by(period) %&gt;% # summarize(average_eb = mean(eb_avg, na.rm=T)) %&gt;% # mutate(average_eb = average_eb * st_area(deans) %&gt;% as.numeric()) %&gt;% # left_join(ebullition_kriging %&gt;% # filter(Sampling == &quot;Deans2&quot;) %&gt;% # group_by(period) %&gt;% # summarize(avg_time = mean(time_hr, na.rm = T)), by = &quot;period&quot;) %&gt;% # mutate(flux_g = average_eb * avg_time)%&gt;% # summarize(sum_flux = sum(flux_g)) %&gt;% # mutate(sum_flux_g_m2_day = sum_flux/st_area(deans)) # # write.csv(deans_30_eb_results_summarized, &quot;5-Results/1-kriged-estimates/deans_30_eb_results_summarized.csv&quot;) Catfish 9/6/22 # catfish_06_eb_results &lt;- read.csv(&quot;5-Results/1-kriged-estimates/catfish_06_eb_results.csv&quot;) # catfish_06_eb_results_summarized &lt;- NULL # catfish1_conc &lt;- read.csv(&quot;2-Clean Data/ebullition_concentrations.csv&quot;)%&gt;% # mutate(corr_ch4 = case_when( # Sample.Vol == 0.1 ~ Undiluted.CH4.conc.ppm * 0.473176497, # Sample.Vol == 0.2 ~ Undiluted.CH4.conc.ppm, # Sample.Vol == 1 ~ Undiluted.CH4.conc.ppm)) %&gt;% # filter(is.na(Data.Flag)==T) %&gt;% # left_join(samplings, by = &quot;Collection.Date&quot;) %&gt;% # filter(Sampling == &quot;Catfish1&quot;) %&gt;% # pull(corr_ch4) # # catfish1_conc_vec &lt;- sample(catfish1_conc, 225, replace=T) # # catfish_06_eb_kr &lt;- catfish_pts %&gt;% # full_join(ebullition_kriging %&gt;% # filter(Sampling == &quot;Catfish1&quot;) %&gt;% # mutate(ch4_rand = catfish1_conc_vec, # ch4_conc = if_else(is.na(corr_ch4), ch4_rand, corr_ch4))) # # # for(i in 1:length(periods)){ # temp &lt;- catfish_06_eb_results %&gt;% filter(period == i) %&gt;% pull(sum_flux) # # temp_df &lt;- data.frame(site = &quot;Catfish&quot;, date = &quot;2022-09-06&quot;, period = i, flux_2.5 = as.numeric(quantile(temp, 0.025)), flux_97.5 = as.numeric(quantile(temp, 0.975)), mean_flux = mean(temp)) # # catfish_06_eb_results_summarized &lt;- bind_rows(catfish_06_eb_results_summarized, temp_df) # } # # catfish_06_eb_results_summarized &lt;- catfish_06_eb_results_summarized %&gt;% mutate(period= periods[period])%&gt;% left_join(ebullition_kriging %&gt;% filter(Sampling == &quot;Catfish1&quot;) %&gt;% group_by(period) %&gt;% summarize(avg_time = mean(time_hr, na.rm = T)), by = &quot;period&quot;) # # ggplot(catfish_06_eb_results_summarized, aes(period, mean_flux))+ # geom_point()+ # geom_errorbar(aes(ymin = flux_2.5, ymax = flux_97.5))+ # ylab(&quot;total ebullition (g/hr)&quot;) # # # calculating by averaging instead of kriging # catfish_06_eb_kr %&gt;% # mutate(eb_avg = gas_vol_corrected * (1/area) * (1/time_hr)* (1/10^6) * mean(catfish1_conc) * (1/10^3) * 16.04 * (1/0.0821)* (1/293.15)) %&gt;% # group_by(period) %&gt;% # summarize(average_eb = mean(eb_avg, na.rm=T)) %&gt;% # mutate(average_eb = average_eb * st_area(catfish) %&gt;% as.numeric()) %&gt;% # left_join(ebullition_kriging %&gt;% # filter(Sampling == &quot;Catfish1&quot;) %&gt;% # group_by(period) %&gt;% # summarize(avg_time = mean(time_hr, na.rm = T)), by = &quot;period&quot;) %&gt;% # mutate(flux_g = average_eb * avg_time)%&gt;% # summarize(sum_flux = sum(flux_g)) %&gt;% # mutate(sum_flux_g_m2_day = sum_flux/st_area(catfish)) # # write.csv(catfish_06_eb_results_summarized, &quot;5-Results/1-kriged-estimates/catfish_06_eb_results_summarized.csv&quot;) Catfish 9/18/22 # catfish2_conc &lt;- read.csv(&quot;2-Clean Data/ebullition_concentrations.csv&quot;)%&gt;% # mutate(corr_ch4 = case_when( # Sample.Vol == 0.1 ~ Undiluted.CH4.conc.ppm * 0.473176497, # Sample.Vol == 0.2 ~ Undiluted.CH4.conc.ppm, # Sample.Vol == 1 ~ Undiluted.CH4.conc.ppm)) %&gt;% # filter(is.na(Data.Flag)==T) %&gt;% # left_join(samplings, by = &quot;Collection.Date&quot;) %&gt;% # filter(Sampling == &quot;Catfish2&quot;) %&gt;% # pull(corr_ch4) # # catfish2_conc_vec &lt;- sample(catfish2_conc, 225, replace=T) # # catfish_18_eb_kr &lt;- catfish_pts %&gt;% # full_join(ebullition_kriging %&gt;% # filter(Sampling == &quot;Catfish2&quot;) %&gt;% # mutate(ch4_rand = catfish2_conc_vec, # ch4_conc = if_else(is.na(corr_ch4), ch4_rand, corr_ch4)) %&gt;% # mutate(ch4_eb_g_m2_hr = gas_vol_corrected * (1/area) * (1/time_hr)* (1/10^6) * ch4_conc * (1/10^3) * 16.04 * (1/0.0821)* (1/293.15)), by = &quot;location&quot;) # # catfish_18_eb_results &lt;- read.csv(&quot;5-Results/1-kriged-estimates/catfish_18_eb_results.csv&quot;) # catfish_18_eb_results_summarized &lt;- NULL # # for(i in 1:length(periods)){ # temp &lt;- catfish_18_eb_results %&gt;% filter(period == i) %&gt;% pull(sum_flux) # # temp_df &lt;- data.frame(site = &quot;Catfish&quot;, date = &quot;2022-09-18&quot;, period = i, flux_2.5 = as.numeric(quantile(temp, 0.025)), flux_97.5 = as.numeric(quantile(temp, 0.975)), mean_flux = mean(temp)) # # catfish_18_eb_results_summarized &lt;- bind_rows(catfish_18_eb_results_summarized, temp_df) # } # # catfish_18_eb_results_summarized &lt;- catfish_18_eb_results_summarized %&gt;% mutate(period= periods[period])%&gt;% left_join(ebullition_kriging %&gt;% filter(Sampling == &quot;Catfish2&quot;) %&gt;% group_by(period) %&gt;% summarize(avg_time = mean(time_hr, na.rm = T)), by = &quot;period&quot;) # # ggplot(catfish_18_eb_results_summarized, aes(period, mean_flux))+ # geom_point()+ # geom_errorbar(aes(ymin = flux_2.5, ymax = flux_97.5))+ # ylab(&quot;total ebullition (g/hr)&quot;) # # # calculating by averaging instead of kriging # catfish_18_eb_kr %&gt;% # mutate(eb_avg = gas_vol_corrected * (1/area) * (1/time_hr)* (1/10^6) * mean(catfish2_conc) * (1/10^3) * 16.04 * (1/0.0821)* (1/293.15)) %&gt;% # group_by(period) %&gt;% # summarize(average_eb = mean(eb_avg, na.rm=T)) %&gt;% # mutate(average_eb = average_eb * st_area(catfish) %&gt;% as.numeric()) %&gt;% # left_join(ebullition_kriging %&gt;% # filter(Sampling == &quot;Catfish2&quot;) %&gt;% # group_by(period) %&gt;% # summarize(avg_time = mean(time_hr, na.rm = T)), by = &quot;period&quot;) %&gt;% # mutate(flux_g = average_eb * avg_time)%&gt;% # summarize(sum_flux = sum(flux_g)) %&gt;% # mutate(sum_flux_g_m2_day = sum_flux/st_area(catfish)) # # write.csv(catfish_18_eb_results_summarized, &quot;5-Results/1-kriged-estimates/catfish_18_eb_results_summarized.csv&quot;) Sister 3 8/22/22 Pick 9/13/22 pick1_conc &lt;- read.csv(&quot;2-Clean Data/ebullition_concentrations.csv&quot;)%&gt;% mutate(corr_ch4 = case_when( Sample.Vol == 0.1 ~ Undiluted.CH4.conc.ppm * 0.473176497, Sample.Vol == 0.2 ~ Undiluted.CH4.conc.ppm, Sample.Vol == 1 ~ Undiluted.CH4.conc.ppm)) %&gt;% filter(is.na(Data.Flag)==T) %&gt;% left_join(samplings, by = &quot;Collection.Date&quot;) %&gt;% filter(Sampling == &quot;Pick1&quot;) %&gt;% pull(corr_ch4) pick1_conc_vec &lt;- sample(pick1_conc, 224, replace=T) pick1_13_eb_kr &lt;- pick_pts %&gt;% full_join(ebullition_kriging %&gt;% filter(Sampling == &quot;Pick1&quot;) %&gt;% mutate(ch4_rand = pick1_conc_vec, ch4_conc = if_else(is.na(corr_ch4), ch4_rand, corr_ch4)) %&gt;% mutate(ch4_eb_g_m2_hr = gas_vol_corrected * (1/area) * (1/time_hr)* (1/10^6) * ch4_conc * (1/10^3) * 16.04 * (1/0.0821)* (1/293.15)), by = &quot;location&quot;) pick_13_eb_results &lt;- read.csv(&quot;5-Results/1-kriged-estimates/pick_13_eb_results.csv&quot;) pick_13_eb_results_summarized &lt;- NULL for(i in 1:length(periods)){ temp &lt;- pick_13_eb_results %&gt;% filter(period == i) %&gt;% pull(sum_flux) temp_df &lt;- data.frame(site = &quot;Pick&quot;, date = &quot;2022-09-13&quot;, period = i, flux_2.5 = as.numeric(quantile(temp, 0.025)), flux_97.5 = as.numeric(quantile(temp, 0.975)), mean_flux = mean(temp)) pick_13_eb_results_summarized &lt;- bind_rows(pick_13_eb_results_summarized, temp_df) } pick_13_eb_results_summarized &lt;- pick_13_eb_results_summarized %&gt;% mutate(period= periods[period])%&gt;% left_join(ebullition_kriging %&gt;% filter(Sampling == &quot;Pick1&quot;) %&gt;% group_by(period) %&gt;% summarize(avg_time = mean(time_hr, na.rm = T)), by = &quot;period&quot;) ggplot(pick_13_eb_results_summarized, aes(period, mean_flux))+ geom_point()+ geom_errorbar(aes(ymin = flux_2.5, ymax = flux_97.5))+ ylab(&quot;total ebullition (g/hr)&quot;) # calculating by averaging instead of kriging pick1_13_eb_kr %&gt;% mutate(eb_avg = gas_vol_corrected * (1/area) * (1/time_hr)* (1/10^6) * mean(pick1_conc) * (1/10^3) * 16.04 * (1/0.0821)* (1/293.15)) %&gt;% group_by(period) %&gt;% summarize(average_eb = mean(eb_avg, na.rm=T)) %&gt;% mutate(average_eb = average_eb * st_area(pick) %&gt;% as.numeric()) %&gt;% left_join(ebullition_kriging %&gt;% filter(Sampling == &quot;Pick1&quot;) %&gt;% group_by(period) %&gt;% summarize(avg_time = mean(time_hr, na.rm = T)), by = &quot;period&quot;) %&gt;% mutate(flux_g = average_eb * avg_time)%&gt;% summarize(sum_flux = sum(flux_g)) %&gt;% mutate(sum_flux_g_m2_day = sum_flux/st_area(pick)) ## Simple feature collection with 1 feature and 2 fields ## Geometry type: MULTIPOINT ## Dimension: XY ## Bounding box: xmin: 287520.6 ymin: 3751939 xmax: 287659.1 ymax: 3752086 ## Projected CRS: WGS 84 / UTM zone 17N ## # A tibble: 1 × 3 ## sum_flux geometry sum_f…¹ ## * &lt;dbl&gt; &lt;MULTIPOINT [m]&gt; [1/m^2] ## 1 1731. ((287520.6 3752063), (287521.2 3752057), (287521.4 3752069),… 0.224 ## # … with abbreviated variable name ¹​sum_flux_g_m2_day write.csv(pick_13_eb_results_summarized, &quot;5-Results/1-kriged-estimates/pick_13_eb_results_summarized.csv&quot;) deans_16_ch4_diff &lt;- read.csv(&quot;5-Results/1-kriged-estimates/deans_16_ch4_results_summarized.csv&quot;) %&gt;% mutate(pathway = &quot;diffusion&quot;, gas = &quot;CH4&quot;, period = as.character(period), avg_time = 3, sampling = &quot;Deans1&quot;) deans_16_co2_diff &lt;- read.csv(&quot;5-Results/1-kriged-estimates/deans_16_co2_results_summarized.csv&quot;) %&gt;% mutate(pathway = &quot;diffusion&quot;, gas = &quot;CO2&quot;, period = as.character(period), avg_time = 3, sampling = &quot;Deans1&quot;) deans_30_ch4_diff &lt;- read.csv(&quot;5-Results/1-kriged-estimates/deans_30_ch4_results_summarized.csv&quot;) %&gt;% mutate(pathway = &quot;diffusion&quot;, gas = &quot;CH4&quot;, period = as.character(period), avg_time = 3, sampling = &quot;Deans2&quot;) deans_30_co2_diff &lt;- read.csv(&quot;5-Results/1-kriged-estimates/deans_30_co2_results_summarized.csv&quot;) %&gt;% mutate(pathway = &quot;diffusion&quot;, gas = &quot;CO2&quot;, period = as.character(period), avg_time = 3, sampling = &quot;Deans2&quot;) catfish_06_ch4_diff &lt;- read.csv(&quot;5-Results/1-kriged-estimates/catfish_06_ch4_results_summarized.csv&quot;) %&gt;% mutate(pathway = &quot;diffusion&quot;, gas = &quot;CH4&quot;, period = as.character(period), avg_time = 3, sampling = &quot;Catfish1&quot;) catfish_06_co2_diff &lt;- read.csv(&quot;5-Results/1-kriged-estimates/catfish_06_co2_results_summarized.csv&quot;) %&gt;% mutate(pathway = &quot;diffusion&quot;, gas = &quot;CO2&quot;, period = as.character(period), avg_time = 3, sampling = &quot;Catfish1&quot;) catfish_18_ch4_diff &lt;- read.csv(&quot;5-Results/1-kriged-estimates/catfish_18_ch4_results_summarized.csv&quot;) %&gt;% mutate(pathway = &quot;diffusion&quot;, gas = &quot;CH4&quot;, period = as.character(period), avg_time = 3, sampling = &quot;Catfish2&quot;) catfish_18_co2_diff &lt;- read.csv(&quot;5-Results/1-kriged-estimates/catfish_18_co2_results_summarized.csv&quot;) %&gt;% mutate(pathway = &quot;diffusion&quot;, gas = &quot;CO2&quot;, period = as.character(period), avg_time = 3, sampling = &quot;Catfish2&quot;) sister3_22_ch4_diff &lt;- read.csv(&quot;5-Results/1-kriged-estimates/sister3_22_ch4_results_summarized.csv&quot;) %&gt;% mutate(pathway = &quot;diffusion&quot;, gas = &quot;CH4&quot;, period = as.character(period), avg_time = 3, sampling = &quot;Sister31&quot;) sister3_22_co2_diff &lt;- read.csv(&quot;5-Results/1-kriged-estimates/sister3_22_co2_results_summarized.csv&quot;) %&gt;% mutate(pathway = &quot;diffusion&quot;, gas = &quot;CO2&quot;, period = as.character(period), avg_time = 3, sampling = &quot;Sister31&quot;) pick_13_ch4_diff &lt;- read.csv(&quot;5-Results/1-kriged-estimates/pick_13_ch4_results_summarized.csv&quot;) %&gt;% mutate(pathway = &quot;diffusion&quot;, gas = &quot;CH4&quot;, period = as.character(period), avg_time = 3, sampling = &quot;Pick1&quot;) pick_13_co2_diff &lt;- read.csv(&quot;5-Results/1-kriged-estimates/pick_13_co2_results_summarized.csv&quot;) %&gt;% mutate(pathway = &quot;diffusion&quot;, gas = &quot;CO2&quot;, period = as.character(period), avg_time = 3, sampling = &quot;Pick1&quot;) deans_16_eb_results_summarized &lt;- read.csv(&quot;5-Results/1-kriged-estimates/deans_16_eb_results_summarized.csv&quot;) deans_30_eb_results_summarized &lt;- read.csv(&quot;5-Results/1-kriged-estimates/deans_30_eb_results_summarized.csv&quot;) catfish_06_eb_results_summarized &lt;- read.csv(&quot;5-Results/1-kriged-estimates/catfish_06_eb_results_summarized.csv&quot;) catfish_18_eb_results_summarized &lt;- read.csv(&quot;5-Results/1-kriged-estimates/catfish_18_eb_results_summarized.csv&quot;) sister3_22_eb_results_summarized &lt;- read.csv(&quot;5-Results/1-kriged-estimates/sister3_22_eb_results_summarized.csv&quot;) pick_13_eb_results_summarized &lt;- read.csv(&quot;5-Results/1-kriged-estimates/pick_13_eb_results_summarized.csv&quot;) all_fluxes_periods &lt;- bind_rows( deans_16_eb_results_summarized %&gt;% mutate(pathway = &quot;ebullition&quot;, gas = &quot;CH4&quot;, sampling = &quot;Deans1&quot;), deans_30_eb_results_summarized %&gt;% mutate(pathway = &quot;ebullition&quot;, gas = &quot;CH4&quot;, sampling = &quot;Deans2&quot;), catfish_06_eb_results_summarized %&gt;% mutate(pathway = &quot;ebullition&quot;, gas = &quot;CH4&quot;, sampling = &quot;Catfish1&quot;), catfish_18_eb_results_summarized %&gt;% mutate(pathway = &quot;ebullition&quot;, gas = &quot;CH4&quot;, sampling = &quot;Catfish2&quot;), sister3_22_eb_results_summarized %&gt;% mutate(pathway = &quot;ebullition&quot;, gas = &quot;CH4&quot;, sampling = &quot;Sister31&quot;), pick_13_eb_results_summarized %&gt;% mutate(pathway = &quot;ebullition&quot;, gas = &quot;CH4&quot;, sampling = &quot;Pick1&quot;), deans_16_ch4_diff, deans_16_co2_diff, deans_30_ch4_diff, deans_30_co2_diff, catfish_06_ch4_diff, catfish_06_co2_diff, catfish_18_ch4_diff, catfish_18_co2_diff, sister3_22_ch4_diff, sister3_22_co2_diff, pick_13_ch4_diff, pick_13_co2_diff ) %&gt;% rename(&quot;mean_flux_g_hr&quot; = &quot;mean_flux&quot;, &quot;flux_2.5_g_hr&quot; = &quot;flux_2.5&quot;, &quot;flux_97.5_g_hr&quot; = &quot;flux_97.5&quot;) %&gt;% mutate(flux_g_mean = avg_time * mean_flux_g_hr, flux_g_2.5 = avg_time * flux_2.5_g_hr, flux_g_97.5 = avg_time * flux_97.5_g_hr) %&gt;% mutate(area = case_when(site == &quot;Deans&quot; ~ st_area(deans) %&gt;% as.numeric(), site == &quot;Pick&quot; ~ st_area(pick) %&gt;% as.numeric(), site == &quot;Catfish&quot; ~ st_area(catfish) %&gt;% as.numeric(), site == &quot;Sister3&quot; ~ st_area(sister3) %&gt;% as.numeric()) ) all_fluxes_pathways &lt;- all_fluxes_periods %&gt;% mutate(area = case_when(site == &quot;Deans&quot; ~ st_area(deans) %&gt;% as.numeric(), site == &quot;Pick&quot; ~ st_area(pick) %&gt;% as.numeric(), site == &quot;Catfish&quot; ~ st_area(catfish) %&gt;% as.numeric(), site == &quot;Sister3&quot; ~ st_area(sister3) %&gt;% as.numeric()) ) %&gt;% group_by(sampling, area, pathway,gas) %&gt;% summarize(flux_mean_g_day = sum(flux_g_mean, na.rm = T), flux_2.5_g_day = sum(flux_g_2.5, na.rm = T), flux_97.5_g_day = sum(flux_g_97.5, na.rm = T)) %&gt;% mutate(co2_eq_conv = case_when(gas == &quot;CO2&quot; ~ 1, gas == &quot;CH4&quot; ~ 25)) %&gt;% mutate(flux_mean_g_m2_day=flux_mean_g_day/area, flux_2.5_g_m2_day =flux_2.5_g_day/area, flux_97.5_g_m2_day=flux_97.5_g_day/area, flux_mean_g_day_co2_eq =flux_mean_g_day * co2_eq_conv, flux_2.5_g_day_co2_eq =flux_2.5_g_day * co2_eq_conv, flux_97.5_g_day_co2_eq = flux_97.5_g_day * co2_eq_conv) ## `summarise()` has grouped output by &#39;sampling&#39;, &#39;area&#39;, &#39;pathway&#39;. You can ## override using the `.groups` argument. all_fluxes_pathways %&gt;% group_by(sampling) %&gt;% summarize(sum_co2_eq = sum(flux_mean_g_day_co2_eq)) ## # A tibble: 6 × 2 ## sampling sum_co2_eq ## &lt;chr&gt; &lt;dbl&gt; ## 1 Catfish1 11387. ## 2 Catfish2 6411. ## 3 Deans1 17160. ## 4 Deans2 9580. ## 5 Pick1 127281. ## 6 Sister31 2258. # write.csv(all_fluxes_periods, &quot;5-Results/1-kriged-estimates/all_fluxes_periods.csv&quot;) # write.csv(all_fluxes_pathways, &quot;5-Results/1-kriged-estimates/all_fluxes_pathways.csv&quot;) "],["total-flux-estimates.html", "Chapter 9 Total flux estimates 9.1 Summary flux table masses and rates 9.2 Summary Table CO2-eq 9.3 Diel Diffusive CH4 9.4 Diel Diffusive CO2 9.5 Diel ebullition", " Chapter 9 Total flux estimates 9.1 Summary flux table masses and rates all_fluxes_pathways %&gt;% select(site, date, pathway:flux_97.5_g_day, flux_mean_g_m2_day:flux_97.5_g_day_co2_eq) ## site date pathway gas flux_mean_g_day flux_2.5_g_day ## 1 Catfish 09/06/22 diffusion CH4 20.64285 13.34017 ## 2 Catfish 09/06/22 diffusion CO2 5511.99890 4798.48983 ## 3 Catfish 09/06/22 ebullition CH4 214.34185 119.58192 ## 4 Catfish 09/18/22 diffusion CH4 19.62964 11.96863 ## 5 Catfish 09/18/22 diffusion CO2 4261.23547 3649.21517 ## 6 Catfish 09/18/22 ebullition CH4 66.34307 36.81873 ## 7 Deans 08/16/22 diffusion CH4 50.08869 38.33435 ## 8 Deans 08/16/22 diffusion CO2 13492.91209 11512.34428 ## 9 Deans 08/16/22 ebullition CH4 96.60728 27.10787 ## 10 Deans 08/30/22 diffusion CH4 25.74449 21.15081 ## 11 Deans 08/30/22 diffusion CO2 4982.78186 4280.08148 ## 12 Deans 08/30/22 ebullition CH4 158.13828 78.70263 ## 13 Pick 09/13/22 diffusion CH4 2283.48643 1917.18105 ## 14 Pick 09/13/22 diffusion CO2 25929.89716 20635.08105 ## 15 Pick 09/13/22 ebullition CH4 1770.53938 1184.97243 ## 16 Sister3 08/22/22 diffusion CH4 13.60304 11.60757 ## 17 Sister3 08/22/22 diffusion CO2 -114.84720 -178.33023 ## 18 Sister3 08/22/22 ebullition CH4 81.33050 58.51445 ## flux_97.5_g_day flux_mean_g_m2_day flux_2.5_g_m2_day flux_97.5_g_m2_day ## 1 28.91009 0.011780753 0.007613153 0.016498818 ## 2 6379.03853 3.145664879 2.738469511 3.640479220 ## 3 356.66288 0.122323616 0.068244686 0.203545378 ## 4 30.33360 0.011202517 0.006830424 0.017311203 ## 5 4976.30544 2.431861656 2.082585319 2.839947817 ## 6 115.10815 0.037861595 0.021012231 0.065691537 ## 7 62.25400 0.012047458 0.009220274 0.014973490 ## 8 15746.14190 3.245349242 2.768978079 3.787301759 ## 9 201.11958 0.023236227 0.006520052 0.048373789 ## 10 31.15960 0.006192131 0.005087247 0.007494587 ## 11 5732.67871 1.198471259 1.029455991 1.378838341 ## 12 256.14321 0.038035817 0.018929755 0.061608210 ## 13 2694.18365 0.295901000 0.248434053 0.349120374 ## 14 31432.48447 3.360073609 2.673955505 4.073115326 ## 15 2503.30440 0.229431787 0.153552271 0.324385669 ## 16 15.90371 0.011580510 0.009881726 0.013539108 ## 17 -51.14731 -0.097771440 -0.151815654 -0.043542606 ## 18 107.44405 0.069238080 0.049814377 0.091469004 ## flux_mean_g_day_co2_eq flux_2.5_g_day_co2_eq flux_97.5_g_day_co2_eq ## 1 516.0713 333.5041 722.75232 ## 2 5511.9989 4798.4898 6379.03853 ## 3 5358.5463 2989.5479 8916.57203 ## 4 490.7409 299.2157 758.33992 ## 5 4261.2355 3649.2152 4976.30544 ## 6 1658.5768 920.4683 2877.70387 ## 7 1252.2173 958.3587 1556.35009 ## 8 13492.9121 11512.3443 15746.14190 ## 9 2415.1820 677.6966 5027.98955 ## 10 643.6124 528.7704 778.99010 ## 11 4982.7819 4280.0815 5732.67871 ## 12 3953.4569 1967.5657 6403.58014 ## 13 57087.1608 47929.5261 67354.59129 ## 14 25929.8972 20635.0811 31432.48447 ## 15 44263.4845 29624.3108 62582.60993 ## 16 340.0761 290.1892 397.59276 ## 17 -114.8472 -178.3302 -51.14731 ## 18 2033.2625 1462.8612 2686.10121 9.2 Summary Table CO2-eq all_fluxes_pathways %&gt;% mutate(flux_mean_g_m2_day_co2_eq = flux_mean_g_day_co2_eq/area, flux_2.5_g_m2_day_co2_eq= flux_2.5_g_day_co2_eq/area, flux_97.5_g_m2_day_co2_eq= flux_97.5_g_day_co2_eq/area)%&gt;% select(site, date, pathway, gas, flux_mean_g_day_co2_eq:flux_97.5_g_m2_day_co2_eq) %&gt;% group_by(site, date) %&gt;% summarize(mean_total_kg_co2_eq_day = sum(flux_mean_g_day_co2_eq)*1e-3, mean_total_kg_co2_eq_m2_day = sum(flux_mean_g_m2_day_co2_eq)*1e-3) ## `summarise()` has grouped output by &#39;site&#39;. You can override using the ## `.groups` argument. ## # A tibble: 6 × 4 ## # Groups: site [4] ## site date mean_total_kg_co2_eq_day mean_total_kg_co2_eq_m2_day ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Catfish 09/06/22 11.4 0.00650 ## 2 Catfish 09/18/22 6.41 0.00366 ## 3 Deans 08/16/22 17.2 0.00413 ## 4 Deans 08/30/22 9.58 0.00230 ## 5 Pick 09/13/22 127. 0.0165 ## 6 Sister3 08/22/22 2.26 0.00192 flux_rate_summary &lt;- all_fluxes_pathways %&gt;% mutate(flux_mean_g_m2_day_co2_eq=flux_mean_g_day_co2_eq/area) %&gt;% select(site, date, pathway, gas, flux_mean_g_m2_day_co2_eq) %&gt;% group_by(site,date,gas) %&gt;% summarize(flux_mean_mg_m2_day=sum(flux_mean_g_m2_day_co2_eq)*1e3) %&gt;% group_by(site, date) %&gt;% summarize(sum = sum(flux_mean_mg_m2_day)) ## `summarise()` has grouped output by &#39;site&#39;, &#39;date&#39;. You can override using the ## `.groups` argument. ## `summarise()` has grouped output by &#39;site&#39;. You can override using the ## `.groups` argument. flux_rate_summary ## # A tibble: 6 × 3 ## # Groups: site [4] ## site date sum ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; ## 1 Catfish 09/06/22 6498. ## 2 Catfish 09/18/22 3658. ## 3 Deans 08/16/22 4127. ## 4 Deans 08/30/22 2304. ## 5 Pick 09/13/22 16493. ## 6 Sister3 08/22/22 1923. 120 *(16.04/12.01) ## [1] 160.2664 329 * (44.01/12.01) ## [1] 1205.603 names(all_fluxes_pathways) ## [1] &quot;sampling&quot; &quot;area&quot; &quot;pathway&quot; ## [4] &quot;gas&quot; &quot;flux_mean_g_day&quot; &quot;flux_2.5_g_day&quot; ## [7] &quot;flux_97.5_g_day&quot; &quot;co2_eq_conv&quot; &quot;flux_mean_g_m2_day&quot; ## [10] &quot;flux_2.5_g_m2_day&quot; &quot;flux_97.5_g_m2_day&quot; &quot;flux_mean_g_day_co2_eq&quot; ## [13] &quot;flux_2.5_g_day_co2_eq&quot; &quot;flux_97.5_g_day_co2_eq&quot; &quot;site&quot; ## [16] &quot;date&quot; flux_rate_summary_2 &lt;- all_fluxes_pathways %&gt;% select(site, date, pathway, gas, flux_mean_g_m2_day) %&gt;% group_by(site,date,gas) %&gt;% summarize(flux_mean_mg_m2_day=sum(flux_mean_g_m2_day)*1e3) ## `summarise()` has grouped output by &#39;site&#39;, &#39;date&#39;. You can override using the ## `.groups` argument. flux_rate_summary_2 %&gt;% pivot_wider(id_cols = c(&quot;site&quot;, &quot;date&quot;), names_from = gas, values_from = flux_mean_mg_m2_day) ## # A tibble: 6 × 4 ## # Groups: site, date [6] ## site date CH4 CO2 ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; ## 1 Catfish 09/06/22 134. 3146. ## 2 Catfish 09/18/22 49.1 2432. ## 3 Deans 08/16/22 35.3 3245. ## 4 Deans 08/30/22 44.2 1198. ## 5 Pick 09/13/22 525. 3360. ## 6 Sister3 08/22/22 80.8 -97.8 9.2.1 Pathway #png(filename = &quot;4-Figures/co2-eq-summary.png&quot;, width = 8, height = 5, units = &quot;in&quot;, res = 300) all_fluxes_pathways %&gt;% mutate(flux_mean_g_m2_day_co2_eq = flux_mean_g_day_co2_eq/area, flux_2.5_g_m2_day_co2_eq= flux_2.5_g_day_co2_eq/area, flux_97.5_g_m2_day_co2_eq= flux_97.5_g_day_co2_eq/area, pathway_gas = paste(pathway, gas, sep = &quot; &quot;), site_date = paste(site, date, sep = &quot; &quot;)) %&gt;% ggplot(aes(site_date, flux_mean_g_m2_day_co2_eq, fill = pathway_gas)) + geom_bar(position = position_dodge(), stat = &quot;identity&quot;)+ geom_errorbar(aes(ymax=flux_97.5_g_m2_day_co2_eq, ymin=flux_2.5_g_m2_day_co2_eq), position = position_dodge())+ scale_fill_manual(values = c(&quot;#96C498&quot;, &quot;#3D5170&quot;, &quot;#94A7C5&quot;))+ ylab(expression(CO[2]-equivalent ~ flux ~ (g~m^-2~day^-1)))+ theme_bw()+ theme(axis.title.x = element_blank(), legend.title = element_blank(), axis.text.x = element_text(angle=45, hjust=1), axis.text = element_text(size = 14, color = &quot;black&quot;), axis.title = element_text(size = 16, color = &quot;black&quot;), legend.text = element_text(size = 14)) #dev.off() 9.3 Diel Diffusive CH4 Log-transformed axis # note log transformation of the y axis all_fluxes_periods %&gt;% filter(gas == &quot;CH4&quot;, pathway == &quot;diffusion&quot;) %&gt;% mutate(period = as.numeric(period), trip_wr =factor(case_when(period == 1 ~ &quot;10AM&quot;, period == 2 ~ &quot;1PM&quot;, period == 3 ~ &quot;4PM&quot;, period == 4 ~ &quot;7PM&quot;, period == 5 ~ &quot;10PM&quot;, period == 6 ~ &quot;1AM&quot;, period == 7 ~ &quot;4AM&quot;, period == 8 ~ &quot;7AM&quot;), levels = c(&quot;10AM&quot;, &quot;1PM&quot;, &quot;4PM&quot;, &quot;7PM&quot;, &quot;10PM&quot;, &quot;1AM&quot;, &quot;4AM&quot;, &quot;7AM&quot;))) %&gt;% mutate(sampling = case_when(sampling == &quot;Catfish1&quot; ~&quot;Catfish 9/06/22&quot;, sampling == &quot;Catfish2&quot; ~ &quot;Catfish 9/18/22&quot;, sampling == &quot;Deans1&quot; ~ &quot;Deans 8/16/22&quot;, sampling == &quot;Deans2&quot; ~ &quot;Deans 8/30/22&quot;, sampling == &quot;Pick1&quot; ~ &quot;Pick 9/13/22&quot;, sampling == &quot;Sister31&quot; ~ &quot;Sister3 8/22/22&quot;)) %&gt;% ggplot(aes(period, flux_g_mean))+ geom_point()+ geom_errorbar(aes(ymin = flux_g_2.5, ymax = flux_g_97.5))+ geom_line()+ scale_y_continuous(trans = &quot;log10&quot;)+ facet_wrap(~sampling) + scale_x_discrete(limits = factor(c(1,2,3,4,5,6,7,8)), labels = c(&quot;10AM&quot;, &quot;1PM&quot;, &quot;4PM&quot;, &quot;7PM&quot;, &quot;10PM&quot;, &quot;1AM&quot;, &quot;4AM&quot;, &quot;7AM&quot;))+ theme_bw()+ ylab(&quot;Diffusive Flux (g CH4/day)&quot;)+ theme(axis.title.x = element_blank()) ## Warning in self$trans$transform(x): NaNs produced ## Warning: Transformation introduced infinite values in continuous y-axis Untransformed axis all_fluxes_periods %&gt;% filter(gas == &quot;CH4&quot;, pathway == &quot;diffusion&quot;) %&gt;% mutate(period = as.numeric(period), trip_wr =factor(case_when(period == 1 ~ &quot;10AM&quot;, period == 2 ~ &quot;1PM&quot;, period == 3 ~ &quot;4PM&quot;, period == 4 ~ &quot;7PM&quot;, period == 5 ~ &quot;10PM&quot;, period == 6 ~ &quot;1AM&quot;, period == 7 ~ &quot;4AM&quot;, period == 8 ~ &quot;7AM&quot;), levels = c(&quot;10AM&quot;, &quot;1PM&quot;, &quot;4PM&quot;, &quot;7PM&quot;, &quot;10PM&quot;, &quot;1AM&quot;, &quot;4AM&quot;, &quot;7AM&quot;))) %&gt;% mutate(sampling = case_when(sampling == &quot;Catfish1&quot; ~&quot;Catfish 9/06/22&quot;, sampling == &quot;Catfish2&quot; ~ &quot;Catfish 9/18/22&quot;, sampling == &quot;Deans1&quot; ~ &quot;Deans 8/16/22&quot;, sampling == &quot;Deans2&quot; ~ &quot;Deans 8/30/22&quot;, sampling == &quot;Pick1&quot; ~ &quot;Pick 9/13/22&quot;, sampling == &quot;Sister31&quot; ~ &quot;Sister3 8/22/22&quot;)) %&gt;% ggplot(aes(period, flux_g_mean))+ geom_point()+ geom_errorbar(aes(ymin = flux_g_2.5, ymax = flux_g_97.5))+ geom_line()+ facet_wrap(~sampling)+ scale_x_discrete(limits = factor(c(1,2,3,4,5,6,7,8)), labels = c(&quot;10AM&quot;, &quot;1PM&quot;, &quot;4PM&quot;, &quot;7PM&quot;, &quot;10PM&quot;, &quot;1AM&quot;, &quot;4AM&quot;, &quot;7AM&quot;))+ theme_bw()+ ylab(&quot;Diffusive Flux (g CH4/day)&quot;)+ theme(axis.title.x = element_blank()) Untransformed rate #png(filename = &quot;4-Figures/ch4-diffusion-periods.png&quot;, width = 9, height = 5, units = &quot;in&quot;, res = 300) all_fluxes_periods %&gt;% filter(gas == &quot;CH4&quot;, pathway == &quot;diffusion&quot;) %&gt;% mutate(period = as.numeric(period), trip_wr =factor(case_when(period == 1 ~ &quot;10AM&quot;, period == 2 ~ &quot;1PM&quot;, period == 3 ~ &quot;4PM&quot;, period == 4 ~ &quot;7PM&quot;, period == 5 ~ &quot;10PM&quot;, period == 6 ~ &quot;1AM&quot;, period == 7 ~ &quot;4AM&quot;, period == 8 ~ &quot;7AM&quot;), levels = c(&quot;10AM&quot;, &quot;1PM&quot;, &quot;4PM&quot;, &quot;7PM&quot;, &quot;10PM&quot;, &quot;1AM&quot;, &quot;4AM&quot;, &quot;7AM&quot;))) %&gt;% mutate(sampling = case_when(sampling == &quot;Catfish1&quot; ~&quot;Catfish 9/06/22&quot;, sampling == &quot;Catfish2&quot; ~ &quot;Catfish 9/18/22&quot;, sampling == &quot;Deans1&quot; ~ &quot;Deans 8/16/22&quot;, sampling == &quot;Deans2&quot; ~ &quot;Deans 8/30/22&quot;, sampling == &quot;Pick1&quot; ~ &quot;Pick 9/13/22&quot;, sampling == &quot;Sister31&quot; ~ &quot;Sister 8/22/22&quot;)) %&gt;% ggplot(aes(period, flux_mean_g_m2_hr))+ geom_point()+ geom_errorbar(aes(ymin = flux_2.5_g_m2_hr, ymax = flux_97.5_g_m2_hr))+ geom_line()+ facet_wrap(~sampling)+ scale_x_discrete(limits = factor(c(1,2,3,4,5,6,7,8)), labels = c(&quot;10AM&quot;, &quot;1PM&quot;, &quot;4PM&quot;, &quot;7PM&quot;, &quot;10PM&quot;, &quot;1AM&quot;, &quot;4AM&quot;, &quot;7AM&quot;))+ theme_bw()+ ylab(expression(Diffusive ~ Flux ~ (g~CH[4]~m^-2~hr^-1)))+ theme(axis.title.x = element_blank(), axis.text = element_text(size=14, color = &quot;black&quot;), axis.text.x = element_text(angle = 45, hjust = 1), axis.title.y = element_text(size=16, color = &quot;black&quot;), strip.text = element_text(size=14, color = &quot;black&quot;)) #dev.off() Untransformed without Picks all_fluxes_periods %&gt;% filter(gas == &quot;CH4&quot;, pathway == &quot;diffusion&quot;, site != &quot;Pick&quot;) %&gt;% mutate(period = as.numeric(period), trip_wr =factor(case_when(period == 1 ~ &quot;10AM&quot;, period == 2 ~ &quot;1PM&quot;, period == 3 ~ &quot;4PM&quot;, period == 4 ~ &quot;7PM&quot;, period == 5 ~ &quot;10PM&quot;, period == 6 ~ &quot;1AM&quot;, period == 7 ~ &quot;4AM&quot;, period == 8 ~ &quot;7AM&quot;), levels = c(&quot;10AM&quot;, &quot;1PM&quot;, &quot;4PM&quot;, &quot;7PM&quot;, &quot;10PM&quot;, &quot;1AM&quot;, &quot;4AM&quot;, &quot;7AM&quot;))) %&gt;% mutate(sampling = case_when(sampling == &quot;Catfish1&quot; ~&quot;Catfish 9/06/22&quot;, sampling == &quot;Catfish2&quot; ~ &quot;Catfish 9/18/22&quot;, sampling == &quot;Deans1&quot; ~ &quot;Deans 8/16/22&quot;, sampling == &quot;Deans2&quot; ~ &quot;Deans 8/30/22&quot;, sampling == &quot;Pick1&quot; ~ &quot;Pick 9/13/22&quot;, sampling == &quot;Sister31&quot; ~ &quot;Sister3 8/22/22&quot;)) %&gt;% ggplot(aes(period, flux_g_mean))+ geom_point()+ geom_errorbar(aes(ymin = flux_g_2.5, ymax = flux_g_97.5))+ geom_line()+ facet_wrap(~sampling)+ scale_x_discrete(limits = factor(c(1,2,3,4,5,6,7,8)), labels = c(&quot;10AM&quot;, &quot;1PM&quot;, &quot;4PM&quot;, &quot;7PM&quot;, &quot;10PM&quot;, &quot;1AM&quot;, &quot;4AM&quot;, &quot;7AM&quot;))+ theme_bw()+ ylab(&quot;Diffusive Flux (g CH4/day)&quot;)+ theme(axis.title.x = element_blank()) 9.4 Diel Diffusive CO2 Untransformed # note log transformation of the y axis all_fluxes_periods %&gt;% filter(gas == &quot;CO2&quot;, pathway == &quot;diffusion&quot;) %&gt;% mutate(period = as.numeric(period), trip_wr =factor(case_when(period == 1 ~ &quot;10AM&quot;, period == 2 ~ &quot;1PM&quot;, period == 3 ~ &quot;4PM&quot;, period == 4 ~ &quot;7PM&quot;, period == 5 ~ &quot;10PM&quot;, period == 6 ~ &quot;1AM&quot;, period == 7 ~ &quot;4AM&quot;, period == 8 ~ &quot;7AM&quot;), levels = c(&quot;10AM&quot;, &quot;1PM&quot;, &quot;4PM&quot;, &quot;7PM&quot;, &quot;10PM&quot;, &quot;1AM&quot;, &quot;4AM&quot;, &quot;7AM&quot;))) %&gt;% mutate(sampling = case_when(sampling == &quot;Catfish1&quot; ~&quot;Catfish 9/06/22&quot;, sampling == &quot;Catfish2&quot; ~ &quot;Catfish 9/18/22&quot;, sampling == &quot;Deans1&quot; ~ &quot;Deans 8/16/22&quot;, sampling == &quot;Deans2&quot; ~ &quot;Deans 8/30/22&quot;, sampling == &quot;Pick1&quot; ~ &quot;Pick 9/13/22&quot;, sampling == &quot;Sister31&quot; ~ &quot;Sister3 8/22/22&quot;)) %&gt;% ggplot(aes(period, flux_g_mean))+ geom_point()+ geom_errorbar(aes(ymin = flux_g_2.5, ymax = flux_g_97.5))+ geom_line()+ facet_wrap(~sampling) + scale_x_discrete(limits = factor(c(1,2,3,4,5,6,7,8)), labels = c(&quot;10AM&quot;, &quot;1PM&quot;, &quot;4PM&quot;, &quot;7PM&quot;, &quot;10PM&quot;, &quot;1AM&quot;, &quot;4AM&quot;, &quot;7AM&quot;))+ theme_bw()+ ylab(&quot;Diffusive Flux (g CO2/day)&quot;)+ theme(axis.title.x = element_blank()) #png(filename = &quot;4-Figures/co2-diffusion-periods.png&quot;, width = 9, height = 5, units = &quot;in&quot;, res = 300) all_fluxes_periods %&gt;% filter(gas == &quot;CO2&quot;, pathway == &quot;diffusion&quot;) %&gt;% mutate(period = as.numeric(period), trip_wr =factor(case_when(period == 1 ~ &quot;10AM&quot;, period == 2 ~ &quot;1PM&quot;, period == 3 ~ &quot;4PM&quot;, period == 4 ~ &quot;7PM&quot;, period == 5 ~ &quot;10PM&quot;, period == 6 ~ &quot;1AM&quot;, period == 7 ~ &quot;4AM&quot;, period == 8 ~ &quot;7AM&quot;), levels = c(&quot;10AM&quot;, &quot;1PM&quot;, &quot;4PM&quot;, &quot;7PM&quot;, &quot;10PM&quot;, &quot;1AM&quot;, &quot;4AM&quot;, &quot;7AM&quot;))) %&gt;% mutate(sampling = case_when(sampling == &quot;Catfish1&quot; ~&quot;Catfish 9/06/22&quot;, sampling == &quot;Catfish2&quot; ~ &quot;Catfish 9/18/22&quot;, sampling == &quot;Deans1&quot; ~ &quot;Deans 8/16/22&quot;, sampling == &quot;Deans2&quot; ~ &quot;Deans 8/30/22&quot;, sampling == &quot;Pick1&quot; ~ &quot;Pick 9/13/22&quot;, sampling == &quot;Sister31&quot; ~ &quot;Sister 8/22/22&quot;)) %&gt;% ggplot(aes(period, flux_mean_g_m2_hr))+ geom_point()+ geom_errorbar(aes(ymin = flux_2.5_g_m2_hr, ymax = flux_97.5_g_m2_hr))+ geom_line()+ facet_wrap(~sampling)+ scale_x_discrete(limits = factor(c(1,2,3,4,5,6,7,8)), labels = c(&quot;10AM&quot;, &quot;1PM&quot;, &quot;4PM&quot;, &quot;7PM&quot;, &quot;10PM&quot;, &quot;1AM&quot;, &quot;4AM&quot;, &quot;7AM&quot;))+ theme_bw()+ ylab(expression(Diffusive ~ Flux ~ (g~CO[2]~m^-2~hr^-1)))+ theme(axis.title.x = element_blank(), axis.text = element_text(size=14, color = &quot;black&quot;), axis.text.x = element_text(angle = 45, hjust = 1), axis.title.y = element_text(size=16, color = &quot;black&quot;), strip.text = element_text(size=14, color = &quot;black&quot;)) #dev.off() #png(filename = &quot;4-Figures/co2-diffusion-periods-no-pick.png&quot;, width = 9, height = 5, units = &quot;in&quot;, res = 300) all_fluxes_periods %&gt;% filter(gas == &quot;CO2&quot;, pathway == &quot;diffusion&quot;, site != &quot;Pick&quot;) %&gt;% mutate(period = as.numeric(period), trip_wr =factor(case_when(period == 1 ~ &quot;10AM&quot;, period == 2 ~ &quot;1PM&quot;, period == 3 ~ &quot;4PM&quot;, period == 4 ~ &quot;7PM&quot;, period == 5 ~ &quot;10PM&quot;, period == 6 ~ &quot;1AM&quot;, period == 7 ~ &quot;4AM&quot;, period == 8 ~ &quot;7AM&quot;), levels = c(&quot;10AM&quot;, &quot;1PM&quot;, &quot;4PM&quot;, &quot;7PM&quot;, &quot;10PM&quot;, &quot;1AM&quot;, &quot;4AM&quot;, &quot;7AM&quot;))) %&gt;% mutate(sampling = case_when(sampling == &quot;Catfish1&quot; ~&quot;Catfish 9/06/22&quot;, sampling == &quot;Catfish2&quot; ~ &quot;Catfish 9/18/22&quot;, sampling == &quot;Deans1&quot; ~ &quot;Deans 8/16/22&quot;, sampling == &quot;Deans2&quot; ~ &quot;Deans 8/30/22&quot;, sampling == &quot;Pick1&quot; ~ &quot;Pick 9/13/22&quot;, sampling == &quot;Sister31&quot; ~ &quot;Sister 8/22/22&quot;)) %&gt;% ggplot(aes(period, flux_mean_g_m2_hr))+ geom_point()+ geom_errorbar(aes(ymin = flux_2.5_g_m2_hr, ymax = flux_97.5_g_m2_hr))+ geom_line()+ facet_wrap(~sampling)+ scale_x_discrete(limits = factor(c(1,2,3,4,5,6,7,8)), labels = c(&quot;10AM&quot;, &quot;1PM&quot;, &quot;4PM&quot;, &quot;7PM&quot;, &quot;10PM&quot;, &quot;1AM&quot;, &quot;4AM&quot;, &quot;7AM&quot;))+ theme_bw()+ ylab(expression(Diffusive ~ Flux ~ (g~CO[2]~m^-2~hr^-1)))+ theme(axis.title.x = element_blank(), axis.text = element_text(size=14, color = &quot;black&quot;), axis.text.x = element_text(angle = 45, hjust = 1), axis.title.y = element_text(size=16, color = &quot;black&quot;), strip.text = element_text(size=14, color = &quot;black&quot;)) #dev.off() Untransformed without Picks # note log transformation of the y axis all_fluxes_periods %&gt;% filter(gas == &quot;CO2&quot;, pathway == &quot;diffusion&quot;, site != &quot;Pick&quot;) %&gt;% mutate(period = as.numeric(period), trip_wr =factor(case_when(period == 1 ~ &quot;10AM&quot;, period == 2 ~ &quot;1PM&quot;, period == 3 ~ &quot;4PM&quot;, period == 4 ~ &quot;7PM&quot;, period == 5 ~ &quot;10PM&quot;, period == 6 ~ &quot;1AM&quot;, period == 7 ~ &quot;4AM&quot;, period == 8 ~ &quot;7AM&quot;), levels = c(&quot;10AM&quot;, &quot;1PM&quot;, &quot;4PM&quot;, &quot;7PM&quot;, &quot;10PM&quot;, &quot;1AM&quot;, &quot;4AM&quot;, &quot;7AM&quot;))) %&gt;% mutate(sampling = case_when(sampling == &quot;Catfish1&quot; ~&quot;Catfish 9/06/22&quot;, sampling == &quot;Catfish2&quot; ~ &quot;Catfish 9/18/22&quot;, sampling == &quot;Deans1&quot; ~ &quot;Deans 8/16/22&quot;, sampling == &quot;Deans2&quot; ~ &quot;Deans 8/30/22&quot;, sampling == &quot;Pick1&quot; ~ &quot;Pick 9/13/22&quot;, sampling == &quot;Sister31&quot; ~ &quot;Sister3 8/22/22&quot;)) %&gt;% ggplot(aes(period, flux_g_mean))+ geom_point()+ geom_errorbar(aes(ymin = flux_g_2.5, ymax = flux_g_97.5))+ geom_line()+ facet_wrap(~sampling) + scale_x_discrete(limits = factor(c(1,2,3,4,5,6,7,8)), labels = c(&quot;10AM&quot;, &quot;1PM&quot;, &quot;4PM&quot;, &quot;7PM&quot;, &quot;10PM&quot;, &quot;1AM&quot;, &quot;4AM&quot;, &quot;7AM&quot;))+ theme_bw()+ ylab(&quot;Diffusive Flux (g CO2/day)&quot;)+ theme(axis.title.x = element_blank()) 9.5 Diel ebullition Untransformed # note log transformation of the y axis all_fluxes_periods %&gt;% filter(gas == &quot;CH4&quot;, pathway == &quot;ebullition&quot;, period != &quot;0~1&quot;, period != &quot;8~9&quot;) %&gt;% mutate(trip = case_when( period == &quot;1~2&quot; ~ 1, period == &quot;2~3&quot; ~ 2, period == &quot;3~4&quot; ~ 3, period == &quot;4~5&quot; ~ 4, period == &quot;5~6&quot; ~ 5, period == &quot;6~7&quot; ~ 6, period == &quot;7~8&quot; ~ 7)) %&gt;% mutate(sampling = case_when(sampling == &quot;Catfish1&quot; ~&quot;Catfish 9/06/22&quot;, sampling == &quot;Catfish2&quot; ~ &quot;Catfish 9/18/22&quot;, sampling == &quot;Deans1&quot; ~ &quot;Deans 8/16/22&quot;, sampling == &quot;Deans2&quot; ~ &quot;Deans 8/30/22&quot;, sampling == &quot;Pick1&quot; ~ &quot;Pick 9/13/22&quot;, sampling == &quot;Sister31&quot; ~ &quot;Sister3 8/22/22&quot;)) %&gt;% ggplot(aes(trip, flux_g_mean))+ geom_point()+ geom_errorbar(aes(ymin = flux_g_2.5, ymax = flux_g_97.5))+ geom_line()+ scale_x_discrete(limits = factor(c(1,2,3,4,5,6,7)), labels = c(&quot;10AM-1PM&quot;,&quot;1PM-4PM&quot;,&quot;4PM-7PM&quot;,&quot;7PM-10PM&quot;,&quot;10PM-1AM&quot;,&quot;1AM-4AM&quot;,&quot;4AM-7AM&quot;))+ facet_wrap(~sampling) + theme_bw()+ ylab(&quot;Ebullitive Flux (g CH4/day)&quot;)+ theme(axis.title.x = element_blank(), axis.text.x = element_text(angle =45, hjust = 1)) Untransformed rate png(filename = &quot;4-Figures/ch4-ebullition-periods.png&quot;, width = 9, height = 5, units = &quot;in&quot;, res = 300) all_fluxes_periods %&gt;% filter(gas == &quot;CH4&quot;, pathway == &quot;ebullition&quot;, period != &quot;0~1&quot;, period != &quot;8~9&quot;) %&gt;% mutate(trip = case_when( period == &quot;1~2&quot; ~ 1, period == &quot;2~3&quot; ~ 2, period == &quot;3~4&quot; ~ 3, period == &quot;4~5&quot; ~ 4, period == &quot;5~6&quot; ~ 5, period == &quot;6~7&quot; ~ 6, period == &quot;7~8&quot; ~ 7)) %&gt;% mutate(sampling = case_when(sampling == &quot;Catfish1&quot; ~&quot;Catfish 9/06/22&quot;, sampling == &quot;Catfish2&quot; ~ &quot;Catfish 9/18/22&quot;, sampling == &quot;Deans1&quot; ~ &quot;Deans 8/16/22&quot;, sampling == &quot;Deans2&quot; ~ &quot;Deans 8/30/22&quot;, sampling == &quot;Pick1&quot; ~ &quot;Pick 9/13/22&quot;, sampling == &quot;Sister31&quot; ~ &quot;Sister 8/22/22&quot;)) %&gt;% ggplot(aes(trip, flux_mean_g_m2_hr))+ geom_point()+ geom_errorbar(aes(ymin = flux_2.5_g_m2_hr, ymax = flux_97.5_g_m2_hr))+ geom_line()+ facet_wrap(~sampling)+ scale_x_discrete(limits = factor(c(1,2,3,4,5,6,7,8)), labels = c(&quot;10AM&quot;, &quot;1PM&quot;, &quot;4PM&quot;, &quot;7PM&quot;, &quot;10PM&quot;, &quot;1AM&quot;, &quot;4AM&quot;, &quot;7AM&quot;))+ theme_bw()+ ylab(expression(Ebullitive ~ Flux ~ (g~CH[4]~m^-2~hr^-1)))+ theme(axis.title.x = element_blank(), axis.text = element_text(size=14, color = &quot;black&quot;), axis.text.x = element_text(angle = 45, hjust = 1), axis.title.y = element_text(size=16, color = &quot;black&quot;), strip.text = element_text(size=14, color = &quot;black&quot;)) dev.off() ## png ## 2 Untransformed without Picks all_fluxes_periods %&gt;% filter(gas == &quot;CH4&quot;, pathway == &quot;ebullition&quot;, period != &quot;0~1&quot;, period != &quot;8~9&quot;, site != &quot;Pick&quot;) %&gt;% mutate(trip = case_when( period == &quot;1~2&quot; ~ 1, period == &quot;2~3&quot; ~ 2, period == &quot;3~4&quot; ~ 3, period == &quot;4~5&quot; ~ 4, period == &quot;5~6&quot; ~ 5, period == &quot;6~7&quot; ~ 6, period == &quot;7~8&quot; ~ 7)) %&gt;% mutate(sampling = case_when(sampling == &quot;Catfish1&quot; ~&quot;Catfish 9/06/22&quot;, sampling == &quot;Catfish2&quot; ~ &quot;Catfish 9/18/22&quot;, sampling == &quot;Deans1&quot; ~ &quot;Deans 8/16/22&quot;, sampling == &quot;Deans2&quot; ~ &quot;Deans 8/30/22&quot;, sampling == &quot;Pick1&quot; ~ &quot;Pick 9/13/22&quot;, sampling == &quot;Sister31&quot; ~ &quot;Sister3 8/22/22&quot;)) %&gt;% ggplot(aes(trip, flux_g_mean))+ geom_point()+ geom_errorbar(aes(ymin = flux_g_2.5, ymax = flux_g_97.5))+ geom_line()+ scale_x_discrete(limits = factor(c(1,2,3,4,5,6,7)), labels = c(&quot;10AM-1PM&quot;,&quot;1PM-4PM&quot;,&quot;4PM-7PM&quot;,&quot;7PM-10PM&quot;,&quot;10PM-1AM&quot;,&quot;1AM-4AM&quot;,&quot;4AM-7AM&quot;))+ facet_wrap(~sampling) + theme_bw()+ ylab(&quot;Ebullitive Flux (g CH4/day)&quot;)+ theme(axis.title.x = element_blank(), axis.text.x = element_text(angle =65, hjust = 1)) "]]
